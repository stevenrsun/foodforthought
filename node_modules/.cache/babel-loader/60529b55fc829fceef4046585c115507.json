{"ast":null,"code":"function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n\nimport ensureComponentIsNative from '../../modules/ensureComponentIsNative';\nimport Image from '../Image';\nimport StyleSheet from '../StyleSheet';\nimport View from '../View';\nimport ViewPropTypes from '../ViewPropTypes';\nimport React, { Component } from 'react';\nvar emptyObject = {};\n/**\n * Very simple drop-in replacement for <Image> which supports nesting views.\n */\n\nvar ImageBackground =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ImageBackground, _Component);\n\n  function ImageBackground() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this._viewRef = null;\n\n    _this._captureRef = function (ref) {\n      _this._viewRef = ref;\n    };\n\n    return _this;\n  }\n\n  var _proto = ImageBackground.prototype;\n\n  _proto.setNativeProps = function setNativeProps(props) {\n    // Work-around flow\n    var viewRef = this._viewRef;\n\n    if (viewRef) {\n      ensureComponentIsNative(viewRef);\n      viewRef.setNativeProps(props);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        style = _this$props.style,\n        imageStyle = _this$props.imageStyle,\n        imageRef = _this$props.imageRef,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"style\", \"imageStyle\", \"imageRef\"]);\n\n    return React.createElement(View, {\n      ref: this._captureRef,\n      style: style\n    }, React.createElement(Image, _extends({}, props, {\n      ref: imageRef,\n      style: [StyleSheet.absoluteFill, {\n        // Temporary Workaround:\n        // Current (imperfect yet) implementation of <Image> overwrites width and height styles\n        // (which is not quite correct), and these styles conflict with explicitly set styles\n        // of <ImageBackground> and with our internal layout model here.\n        // So, we have to proxy/reapply these styles explicitly for actual <Image> component.\n        // This workaround should be removed after implementing proper support of\n        // intrinsic content size of the <Image>.\n        width: style.width,\n        height: style.height,\n        zIndex: -1\n      }, imageStyle]\n    })), children);\n  };\n\n  return ImageBackground;\n}(Component);\n\nImageBackground.defaultProps = {\n  style: emptyObject\n};\nImageBackground.propTypes = process.env.NODE_ENV !== \"production\" ? _objectSpread({}, Image.propTypes, {\n  imageStyle: Image.propTypes.style,\n  style: ViewPropTypes.style\n}) : {};\nexport default ImageBackground;","map":null,"metadata":{},"sourceType":"module"}