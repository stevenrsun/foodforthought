{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _d = require('d3');\n\nvar d3 = _interopRequireWildcard(_d);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar BubbleChart = function (_Component) {\n  _inherits(BubbleChart, _Component);\n\n  function BubbleChart(props) {\n    _classCallCheck(this, BubbleChart);\n\n    var _this = _possibleConstructorReturn(this, (BubbleChart.__proto__ || Object.getPrototypeOf(BubbleChart)).call(this, props));\n\n    _this.renderChart = _this.renderChart.bind(_this);\n    _this.renderBubbles = _this.renderBubbles.bind(_this);\n    _this.renderLegend = _this.renderLegend.bind(_this);\n    return _this;\n  }\n\n  _createClass(BubbleChart, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.svg = _reactDom2.default.findDOMNode(this);\n      this.renderChart();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      var _props = this.props,\n          width = _props.width,\n          height = _props.height;\n\n      if (width !== 0 && height !== 0) {\n        this.renderChart();\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          width = _props2.width,\n          height = _props2.height;\n      return _react2.default.createElement('svg', {\n        width: width,\n        height: height\n      });\n    }\n  }, {\n    key: 'renderChart',\n    value: function renderChart() {\n      var _props3 = this.props,\n          graph = _props3.graph,\n          data = _props3.data,\n          height = _props3.height,\n          width = _props3.width,\n          padding = _props3.padding,\n          showLegend = _props3.showLegend,\n          legendPercentage = _props3.legendPercentage; // Reset the svg element to a empty state.\n\n      this.svg.innerHTML = '';\n      var bubblesWidth = showLegend ? width * (1 - legendPercentage / 100) : width;\n      var legendWidth = width - bubblesWidth;\n      var color = d3.scaleOrdinal(d3.schemeCategory20c);\n      var pack = d3.pack().size([bubblesWidth * graph.zoom, bubblesWidth * graph.zoom]).padding(padding); // Process the data to have a hierarchy structure;\n\n      var root = d3.hierarchy({\n        children: data\n      }).sum(function (d) {\n        return d.value;\n      }).sort(function (a, b) {\n        return b.value - a.value;\n      }).each(function (d) {\n        if (d.data.label) {\n          d.label = d.data.label;\n          d.id = d.data.label.toLowerCase().replace(/ |\\//g, \"-\");\n        }\n      }); // Pass the data to the pack layout to calculate the distribution.\n\n      var nodes = pack(root).leaves(); // Call to the function that draw the bubbles.\n\n      this.renderBubbles(bubblesWidth, nodes, color); // Call to the function that draw the legend.\n\n      if (showLegend) {\n        this.renderLegend(legendWidth, height, bubblesWidth, nodes, color);\n      }\n    }\n  }, {\n    key: 'renderBubbles',\n    value: function renderBubbles(width, nodes, color) {\n      var _props4 = this.props,\n          graph = _props4.graph,\n          data = _props4.data,\n          bubbleClickFun = _props4.bubbleClickFun,\n          valueFont = _props4.valueFont,\n          labelFont = _props4.labelFont;\n      var bubbleChart = d3.select(this.svg).append(\"g\").attr(\"class\", \"bubble-chart\").attr(\"transform\", function (d) {\n        return \"translate(\" + width * graph.offsetX + \",\" + width * graph.offsetY + \")\";\n      });\n      ;\n      var node = bubbleChart.selectAll(\".node\").data(nodes).enter().append(\"g\").attr(\"class\", \"node\").attr(\"transform\", function (d) {\n        return \"translate(\" + d.x + \",\" + d.y + \")\";\n      }).on(\"click\", function (d) {\n        bubbleClickFun(d.label);\n      });\n      node.append(\"circle\").attr(\"id\", function (d) {\n        return d.id;\n      }).attr(\"r\", function (d) {\n        return d.r - d.r * .04;\n      }).style(\"fill\", function (d) {\n        return d.data.color ? d.data.color : color(nodes.indexOf(d));\n      }).style(\"z-index\", 1).on('mouseover', function (d) {\n        d3.select(this).attr(\"r\", d.r * 1.04);\n      }).on('mouseout', function (d) {\n        var r = d.r - d.r * 0.04;\n        d3.select(this).attr(\"r\", r);\n      });\n      node.append(\"clipPath\").attr(\"id\", function (d) {\n        return \"clip-\" + d.id;\n      }).append(\"use\").attr(\"xlink:href\", function (d) {\n        return \"#\" + d.id;\n      });\n      node.append(\"text\").attr(\"class\", \"value-text\").style(\"font-size\", valueFont.size + 'px').attr(\"clip-path\", function (d) {\n        return \"url(#clip-\" + d.id + \")\";\n      }).style(\"font-weight\", function (d) {\n        return valueFont.weight ? valueFont.weight : 600;\n      }).style(\"font-family\", valueFont.family).style(\"fill\", function () {\n        return valueFont.color ? valueFont.color : '#000';\n      }).style(\"stroke\", function () {\n        return valueFont.lineColor ? valueFont.lineColor : '#000';\n      }).style(\"stroke-width\", function () {\n        return valueFont.lineWeight ? valueFont.lineWeight : 0;\n      }).text(function (d) {\n        return d.value;\n      });\n      node.append(\"text\").attr(\"class\", \"label-text\").style(\"font-size\", labelFont.size + 'px').attr(\"clip-path\", function (d) {\n        return \"url(#clip-\" + d.id + \")\";\n      }).style(\"font-weight\", function (d) {\n        return labelFont.weight ? labelFont.weight : 600;\n      }).style(\"font-family\", labelFont.family).style(\"fill\", function () {\n        return labelFont.color ? labelFont.color : '#000';\n      }).style(\"stroke\", function () {\n        return labelFont.lineColor ? labelFont.lineColor : '#000';\n      }).style(\"stroke-width\", function () {\n        return labelFont.lineWeight ? labelFont.lineWeight : 0;\n      }).text(function (d) {\n        return d.label;\n      }); // Center the texts inside the circles.\n\n      d3.selectAll(\".label-text\").attr(\"x\", function (d) {\n        var self = d3.select(this);\n        var width = self.node().getBBox().width;\n        return -(width / 2);\n      }).style(\"opacity\", function (d) {\n        var self = d3.select(this);\n        var width = self.node().getBBox().width;\n        d.hideLabel = width * 1.05 > d.r * 2;\n        return d.hideLabel ? 0 : 1;\n      }).attr(\"y\", function (d) {\n        return labelFont.size / 2;\n      }); // Center the texts inside the circles.\n\n      d3.selectAll(\".value-text\").attr(\"x\", function (d) {\n        var self = d3.select(this);\n        var width = self.node().getBBox().width;\n        return -(width / 2);\n      }).attr(\"y\", function (d) {\n        if (d.hideLabel) {\n          return valueFont.size / 3;\n        } else {\n          return -valueFont.size * 0.5;\n        }\n      });\n      node.append(\"title\").text(function (d) {\n        return d.label;\n      });\n    }\n  }, {\n    key: 'renderLegend',\n    value: function renderLegend(width, height, offset, nodes, color) {\n      var _props5 = this.props,\n          data = _props5.data,\n          legendClickFun = _props5.legendClickFun,\n          legendFont = _props5.legendFont;\n      var bubble = d3.select('.bubble-chart');\n      var bubbleHeight = bubble.node().getBBox().height;\n      var legend = d3.select(this.svg).append(\"g\").attr(\"transform\", function () {\n        return 'translate(' + offset + ',' + bubbleHeight * 0.05 + ')';\n      }).attr(\"class\", \"legend\");\n      var textOffset = 0;\n      var texts = legend.selectAll(\".legend-text\").data(nodes).enter().append(\"g\").attr(\"transform\", function (d, i) {\n        var offset = textOffset;\n        textOffset += legendFont.size + 10;\n        return 'translate(0,' + offset + ')';\n      }).on('mouseover', function (d) {\n        d3.select('#' + d.id).attr(\"r\", d.r * 1.04);\n      }).on('mouseout', function (d) {\n        var r = d.r - d.r * 0.04;\n        d3.select('#' + d.id).attr(\"r\", r);\n      }).on(\"click\", function (d) {\n        legendClickFun(d.label);\n      });\n      ;\n      texts.append(\"rect\").attr(\"width\", 30).attr(\"height\", legendFont.size).attr(\"x\", 0).attr(\"y\", -legendFont.size).style(\"fill\", \"transparent\");\n      texts.append(\"rect\").attr(\"width\", legendFont.size).attr(\"height\", legendFont.size).attr(\"x\", 0).attr(\"y\", -legendFont.size).style(\"fill\", function (d) {\n        return d.data.color ? d.data.color : color(nodes.indexOf(d));\n      });\n      texts.append(\"text\").style(\"font-size\", legendFont.size + 'px').style(\"font-weight\", function (d) {\n        return legendFont.weight ? legendFont.weight : 600;\n      }).style(\"font-family\", legendFont.family).style(\"fill\", function () {\n        return legendFont.color ? legendFont.color : '#000';\n      }).style(\"stroke\", function () {\n        return legendFont.lineColor ? legendFont.lineColor : '#000';\n      }).style(\"stroke-width\", function () {\n        return legendFont.lineWeight ? legendFont.lineWeight : 0;\n      }).attr(\"x\", function (d) {\n        return legendFont.size + 10;\n      }).attr(\"y\", 0).text(function (d) {\n        return d.label;\n      });\n    }\n  }]);\n\n  return BubbleChart;\n}(_react.Component);\n\nexports.default = BubbleChart;\nBubbleChart.propTypes = {\n  graph: _propTypes2.default.shape({\n    zoom: _propTypes2.default.number,\n    offsetX: _propTypes2.default.number,\n    offsetY: _propTypes2.default.number\n  }),\n  width: _propTypes2.default.number,\n  height: _propTypes2.default.number,\n  padding: _propTypes2.default.number,\n  showLegend: _propTypes2.default.bool,\n  legendPercentage: _propTypes2.default.number,\n  legendFont: _propTypes2.default.shape({\n    family: _propTypes2.default.string,\n    size: _propTypes2.default.number,\n    color: _propTypes2.default.string,\n    weight: _propTypes2.default.string\n  }),\n  valueFont: _propTypes2.default.shape({\n    family: _propTypes2.default.string,\n    size: _propTypes2.default.number,\n    color: _propTypes2.default.string,\n    weight: _propTypes2.default.string\n  }),\n  labelFont: _propTypes2.default.shape({\n    family: _propTypes2.default.string,\n    size: _propTypes2.default.number,\n    color: _propTypes2.default.string,\n    weight: _propTypes2.default.string\n  })\n};\nBubbleChart.defaultProps = {\n  graph: {\n    zoom: 1.1,\n    offsetX: -0.05,\n    offsetY: -0.01\n  },\n  width: 1000,\n  height: 800,\n  padding: 0,\n  showLegend: true,\n  legendPercentage: 20,\n  legendFont: {\n    family: 'Arial',\n    size: 12,\n    color: '#000',\n    weight: 'bold'\n  },\n  valueFont: {\n    family: 'Arial',\n    size: 16,\n    color: '#fff',\n    weight: 'bold'\n  },\n  labelFont: {\n    family: 'Arial',\n    size: 11,\n    color: '#fff',\n    weight: 'normal'\n  },\n  bubbleClickFun: function bubbleClickFun(label) {\n    console.log('Bubble ' + label + ' is clicked ...');\n  },\n  legendClickFun: function legendClickFun(label) {\n    console.log('Legend ' + label + ' is clicked ...');\n  }\n};","map":null,"metadata":{},"sourceType":"script"}