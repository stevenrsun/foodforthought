{"ast":null,"code":"var _jsxFileName = \"/Users/murray/Developer/coursework/software_engineering_cs373/foodforthoughts/src/components/BarChart.js\";\n// import React, { Component } from 'react';\n// import * as d3 from \"d3\";\n// import d3Tip  from \"d3-tip\";\n// //This code is modified from Simple d3.js bar chart D3: http://bl.ocks.org/d3noob/8952219#bar-data.csv\n// //with rainbow function from this codepen: https://codepen.io/chadoh/pen/NRXpKw\n// class BarChart extends Component\n// {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       isLoaded: false,\n//       bottomText: \"Loading...\",\n//       data: []\n//     };\n//   }\n//   async componentDidMount() {\n//     try {\n//       // call API\n//       let url = 'https://cors-anywhere.herokuapp.com/http://api.foodforthoughtt.me/food';\n//       const response = await fetch(url);\n//       // wait for response\n//       if (!response.ok) {\n//         throw Error(response.statusText);\n//       }\n//       const json = await response.json();\n//       this.setState({ data: json });\n//     } catch (error) {\n//       console.log(error);\n//     }\n//     var labels = []\n//     var values = []\n//     for (let i=0; i < this.state.data.length; i++) {\n//       labels.push(this.state.data[i]['name'])\n//       values.push(this.state.data[i]['calories'])\n//     }\n//     this.drawBarChart(labels, values);\n//   }\n//   drawBarChart(labels, data)  {\n//     const canvasHeight = 400\n//     const canvasWidth = 600\n//     const scale = 5\n//     const svgCanvas = d3.select(this.refs.canvas)\n//         .append(\"svg\")\n//         .attr(\"width\", canvasWidth)\n//         .attr(\"height\", canvasHeight)\n//         .style(\"border\", \"1px solid black\")\n//     svgCanvas.selectAll(\"rect\")\n//         .data(data).enter()\n//             .append(\"rect\")\n//             .attr(\"width\", 40)\n//             .attr(\"height\", (datapoint) => datapoint * scale)\n//             .attr(\"fill\", \"orange\")\n//             .attr(\"x\", (datapoint, iteration) => iteration * 45)\n//             .attr(\"y\", (datapoint) => canvasHeight - datapoint * scale)\n//     svgCanvas.selectAll(\"text\")\n//       .data(data).enter()\n//           .append(\"text\")\n//           .attr(\"x\", (dataPoint, i) => i * 45 + 10)\n//           .attr(\"y\", (dataPoint, i) => canvasHeight - dataPoint * scale - 10)\n//           .text(dataPoint => dataPoint)\n//   }\n//   render() { \n//     return <div ref=\"canvas\"></div> \n//   }\n// }\n// export default BarChart;\nimport React from 'react';\nimport rd3 from 'react-d3-library';\nimport * as d3 from 'd3';\nconst RD3Component = rd3.Component;\n\nasync function loadChart() {\n  var node = document.createElement('div');\n  const apiData = await d3.json(\"https://cors-anywhere.herokuapp.com/http://api.foodforthoughtt.me/food\");\n  var data = [];\n\n  for (let i = 0; i < apiData.length; i++) {\n    data.push({\n      name: this.state.data[i]['name'],\n      value: this.state.data[i]['calories']\n    });\n  }\n\n  var margin = {\n    top: 30,\n    right: 0,\n    bottom: 10,\n    left: 300\n  };\n  var width = 800;\n  var height = data.length * 25 + margin.top + margin.bottom;\n  var svg = d3.select(node).append(\"svg\").attr(\"width\", width).attr(\"height\", height);\n  const x = d3.scale.linear().domain([0, d3.max(data, d => d.value)]).range([margin.left, width - margin.right]);\n  const y = d3.scaleBand().domain(data.map(d => d.name)).range([margin.top, height - margin.bottom]).padding(0.1);\n\n  const xAxis = g => g.attr(\"transform\", \"translate(0,\".concat(margin.top, \")\")).call(d3.axisTop(x).ticks(width / 80)).call(g => g.select(\".domain\").remove());\n\n  const yAxis = g => g.attr(\"transform\", \"translate(\".concat(margin.left, \",0)\")).call(d3.axisLeft(y).tickSizeOuter(0));\n\n  const format = x.tickFormat(20);\n  svg.append(\"g\").attr(\"fill\", \"steelblue\").selectAll(\"rect\").data(data).join(\"rect\").attr(\"x\", x(0)).attr(\"y\", d => y(d.name)).attr(\"width\", d => x(d.value) - x(0)).attr(\"height\", y.bandwidth());\n  svg.append(\"g\").attr(\"fill\", \"white\").attr(\"text-anchor\", \"end\").style(\"font\", \"12px sans-serif\").selectAll(\"text\").data(data).join(\"text\").attr(\"x\", d => x(d.value) - 4).attr(\"y\", d => y(d.name) + y.bandwidth() / 2).attr(\"dy\", \"0.35em\").text(d => format(d.value));\n  svg.append(\"g\").call(xAxis);\n  svg.append(\"g\").call(yAxis);\n  return node;\n}\n\nexport default class HorizontalBarChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      d3: ''\n    };\n  }\n\n  componentDidMount() {\n    loadChart().then(result => {\n      this.setState({\n        d3: result\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(RD3Component, {\n      data: this.state.d3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/murray/Developer/coursework/software_engineering_cs373/foodforthoughts/src/components/BarChart.js"],"names":["React","rd3","d3","RD3Component","Component","loadChart","node","document","createElement","apiData","json","data","i","length","push","name","state","value","margin","top","right","bottom","left","width","height","svg","select","append","attr","x","scale","linear","domain","max","d","range","y","scaleBand","map","padding","xAxis","g","call","axisTop","ticks","remove","yAxis","axisLeft","tickSizeOuter","format","tickFormat","selectAll","join","bandwidth","style","text","HorizontalBarChart","constructor","props","componentDidMount","then","result","setState","render"],"mappings":"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","sourcesContent":["// import React, { Component } from 'react';\n// import * as d3 from \"d3\";\n// import d3Tip  from \"d3-tip\";\n\n\n\n// //This code is modified from Simple d3.js bar chart D3: http://bl.ocks.org/d3noob/8952219#bar-data.csv\n// //with rainbow function from this codepen: https://codepen.io/chadoh/pen/NRXpKw\n\n// class BarChart extends Component\n// {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       isLoaded: false,\n//       bottomText: \"Loading...\",\n//       data: []\n//     };\n//   }\n\n//   async componentDidMount() {\n//     try {\n//       // call API\n//       let url = 'https://cors-anywhere.herokuapp.com/http://api.foodforthoughtt.me/food';\n//       const response = await fetch(url);\n//       // wait for response\n//       if (!response.ok) {\n//         throw Error(response.statusText);\n//       }\n//       const json = await response.json();\n//       this.setState({ data: json });\n//     } catch (error) {\n//       console.log(error);\n//     }\n\n//     var labels = []\n//     var values = []\n//     for (let i=0; i < this.state.data.length; i++) {\n//       labels.push(this.state.data[i]['name'])\n//       values.push(this.state.data[i]['calories'])\n//     }\n//     this.drawBarChart(labels, values);\n//   }\n\n//   drawBarChart(labels, data)  {\n//     const canvasHeight = 400\n//     const canvasWidth = 600\n//     const scale = 5\n//     const svgCanvas = d3.select(this.refs.canvas)\n//         .append(\"svg\")\n//         .attr(\"width\", canvasWidth)\n//         .attr(\"height\", canvasHeight)\n//         .style(\"border\", \"1px solid black\")\n//     svgCanvas.selectAll(\"rect\")\n//         .data(data).enter()\n//             .append(\"rect\")\n//             .attr(\"width\", 40)\n//             .attr(\"height\", (datapoint) => datapoint * scale)\n//             .attr(\"fill\", \"orange\")\n//             .attr(\"x\", (datapoint, iteration) => iteration * 45)\n//             .attr(\"y\", (datapoint) => canvasHeight - datapoint * scale)\n    \n//     svgCanvas.selectAll(\"text\")\n//       .data(data).enter()\n//           .append(\"text\")\n//           .attr(\"x\", (dataPoint, i) => i * 45 + 10)\n//           .attr(\"y\", (dataPoint, i) => canvasHeight - dataPoint * scale - 10)\n//           .text(dataPoint => dataPoint)\n//   }\n\n//   render() { \n//     return <div ref=\"canvas\"></div> \n//   }\n// }\n\n// export default BarChart;\n\nimport React from 'react'\nimport rd3 from 'react-d3-library'\nimport * as d3 from 'd3'\n\nconst RD3Component = rd3.Component;\n\nasync function loadChart() {\n    var node = document.createElement('div');\n\n    const apiData = await d3.json(\"https://cors-anywhere.herokuapp.com/http://api.foodforthoughtt.me/food\")\n\n    var data = []\n    for (let i=0; i < apiData.length; i++) {\n      data.push({name: this.state.data[i]['name'], value: this.state.data[i]['calories']})\n    }\n\n    var margin = ({top: 30, right: 0, bottom: 10, left: 300})\n\n    var width = 800;\n    var height = data.length * 25 + margin.top + margin.bottom\n\n    var svg = d3.select(node).append(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n    \n    \n    const x = d3.scale.linear()\n        .domain([0, d3.max(data, d => d.value)])\n        .range([margin.left, width - margin.right]) \n    \n    const y = d3.scaleBand()\n        .domain(data.map(d => d.name))\n        .range([margin.top, height - margin.bottom])\n        .padding(0.1)\n    \n    const xAxis = g => g\n        .attr(\"transform\", `translate(0,${margin.top})`)\n        .call(d3.axisTop(x).ticks(width / 80))\n        .call(g => g.select(\".domain\").remove())\n\n    const yAxis = g => g\n        .attr(\"transform\", `translate(${margin.left},0)`)\n        .call(d3.axisLeft(y).tickSizeOuter(0))\n\n    const format =  x.tickFormat(20);\n\n    \n    svg.append(\"g\")\n            .attr(\"fill\", \"steelblue\")\n        .selectAll(\"rect\")\n        .data(data)\n        .join(\"rect\")\n            .attr(\"x\", x(0))\n            .attr(\"y\", d => y(d.name))\n            .attr(\"width\", d => x(d.value) - x(0))\n            .attr(\"height\", y.bandwidth());\n    \n    svg.append(\"g\")\n            .attr(\"fill\", \"white\")\n            .attr(\"text-anchor\", \"end\")\n            .style(\"font\", \"12px sans-serif\")\n        .selectAll(\"text\")\n        .data(data)\n        .join(\"text\")\n            .attr(\"x\", d => x(d.value) - 4)\n            .attr(\"y\", d => y(d.name) + y.bandwidth() / 2)\n            .attr(\"dy\", \"0.35em\")\n            .text(d => format(d.value));\n    \n    svg.append(\"g\")\n        .call(xAxis);\n    \n    svg.append(\"g\")\n        .call(yAxis);\n\n    return node;\n    \n    \n}\n\nexport default class HorizontalBarChart extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {d3: ''}\n    }\n  \n    componentDidMount() {\n      loadChart().then((result) => {\n        this.setState({d3: result});\n      })\n    }\n  \n    render() {\n      return(<div><RD3Component data={this.state.d3}/></div>)\n    }\n  }\n"]},"metadata":{},"sourceType":"module"}