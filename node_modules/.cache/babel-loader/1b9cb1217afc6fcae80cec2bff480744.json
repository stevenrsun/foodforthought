{"ast":null,"code":"var _jsxFileName = \"/Users/murray/Developer/coursework/software_engineering_cs373/foodforthoughts/src/pages/restaurant.js\";\nimport React from 'react';\nimport Select from 'react-select';\nimport backImage from '../photos/rest_image.jpg';\nimport { RestaurantCardGrid } from \"../components/infocard.js\";\nimport { PageNav } from '../components/pageNav.js';\nimport { SearchCardGrid } from '../components/searchCard.js';\nimport { Form, Button, FormControl } from 'react-bootstrap';\nimport '../App.css';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nclass Restaurant extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.search = () => {\n      var searchElements = this.state.elements.filter(dict => {\n        var found = false;\n\n        for (let key in dict) {\n          if (typeof dict[key] == 'string' && dict[key].toLowerCase().includes(this.state.searchParams.toLowerCase())) found = true;else if (typeof dict[key] != 'string' && dict[key].toString().toLowerCase().includes(this.state.searchParams.toLowerCase())) found = true;\n        }\n\n        return found;\n      });\n      this.setState({\n        searchElements: searchElements,\n        elements: []\n      });\n    };\n\n    this.compare = (a, b) => {\n      let key = 'name';\n\n      if (this.state.dropdownLabel != 'Attributes') {\n        key = this.state.dropdownLabel.charAt(0).toLowerCase() + this.state.dropdownLabel.slice(1);\n      }\n\n      if (a[key] < b[key]) {\n        return -1;\n      }\n\n      if (a[key] > b[key]) {\n        return 1;\n      }\n\n      return 0;\n    };\n\n    this.sort = () => {\n      this.setState({\n        elements: this.state.elements.sort(this.compare)\n      });\n    };\n\n    this.incrementPage = () => {\n      const page = this.state.page + 1;\n      this.setState({\n        page\n      });\n    };\n\n    this.decrementPage = () => {\n      const page = this.state.page - 1;\n      this.setState({\n        page\n      });\n    };\n\n    this.goFirstPage = () => {\n      const page = 0;\n      this.setState({\n        page\n      });\n    };\n\n    this.goLastPage = () => {\n      const page = Math.ceil(this.state.elements.length / 9) - 1;\n      this.setState({\n        page\n      });\n    };\n\n    this.styles = {\n      image: {\n        width: 200,\n        height: 150\n      },\n      background: {\n        backgroundImage: \"url(\".concat(backImage),\n        height: '210vh',\n        // 220 vh\n        width: '100vw',\n        overflow: 'auto',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n        backgroundSize: 'cover',\n        backgroundAttachment: 'fixed'\n      },\n      header: {\n        textAlign: 'center',\n        color: 'aliceblue',\n        fontSize: 150\n      }\n    };\n\n    this.toggle = () => {\n      this.setState(prevState => ({\n        dropdownOpen: !prevState.dropdownOpen\n      }));\n    };\n\n    this.toggleMid = () => {\n      this.setState(prevState => ({\n        midDropdownOpen: !prevState.midDropdownOpen\n      }));\n    };\n\n    this.changeFilterTag = label => {\n      this.setState({\n        dropdownLabel: label.currentTarget.getAttribute(\"id\"),\n        filterKey: label.currentTarget.getAttribute(\"fkey\")\n      });\n    };\n\n    this.handleChange = ({\n      target\n    }) => {\n      this.setState({\n        [target.name]: target.value\n      });\n    };\n\n    this.handleReset = () => {\n      this.setState({\n        elements: this.state.resetElements,\n        searchElements: [],\n        cuisineFilter: [],\n        locationFilter: [],\n        costFilter: [],\n        selectedOptionsCuisine: [],\n        selectedOptionsLocation: [],\n        selectedOptionsCost: [],\n        min: null,\n        max: null\n      });\n    };\n\n    this.applyFilter = () => {\n      if (this.state.dropdownLabel === 'Rating' || this.state.dropdownLabel === 'Yelp Reviews') {\n        var elements = this.state.elements.filter(dict => {\n          return dict[this.state.filterKey] >= this.state.min && dict[this.state.filterKey] <= this.state.max;\n        });\n        this.setState({\n          elements\n        });\n      } else {\n        var elements = this.state.elements.filter(dict => {\n          var pass = true;\n          var found = false;\n          let i;\n\n          for (i = 0; i < this.state.cuisineFilter.length; i++) if (!dict['category'].includes(this.state.cuisineFilter[i])) pass = false;\n\n          for (i = 0; i < this.state.locationFilter.length; i++) if (!dict['address'].includes(this.state.locationFilter[i])) pass = false;\n\n          for (i = 0; i < this.state.costFilter.length; i++) {\n            if (dict['price_range'] === this.state.costFilter[i]) found = true;\n            pass = found;\n          }\n\n          return pass;\n        });\n        this.setState({\n          elements\n        });\n      }\n    };\n\n    this.handleSelectCost = selectedOptionsCost => {\n      this.setState({\n        selectedOptionsCost\n      });\n      if (this.state.dropdownLabel === 'Cost' && selectedOptionsCost != null) this.setState({\n        costFilter: selectedOptionsCost.map(o => o.value)\n      });\n    };\n\n    this.handleSelectAddress = selectedOptionsAddress => {\n      this.setState({\n        selectedOptionsAddress\n      });\n      if (this.state.dropdownLabel === 'Location' && selectedOptionsAddress != null) this.setState({\n        locationFilter: selectedOptionsAddress.map(o => o.value)\n      });\n    };\n\n    this.handleSelectCuisine = selectedOptionsCuisine => {\n      this.setState({\n        selectedOptionsCuisine\n      });\n      if (this.state.dropdownLabel === 'Cuisine' && selectedOptionsCuisine != null) this.setState({\n        cuisineFilter: selectedOptionsCuisine.map(o => o.value)\n      });\n    };\n\n    this.state = {\n      elements: [],\n      resetElements: [],\n      searchElements: [],\n      page: 0,\n      link: '/RestaurantPage',\n      dropdownOpen: false,\n      midDropdownOpen: false,\n      dropdownLabel: 'Attributes',\n      cuisineFilter: [],\n      locationFilter: [],\n      costFilter: [],\n      filterKey: 'init',\n      min: null,\n      max: null,\n      selectedOptionsAddress: [],\n      selectedOptionsCost: [],\n      selectedOptionsCuisine: [],\n      searchParams: ''\n    };\n  }\n\n  componentDidMount() {\n    let url = 'https://cors-anywhere.herokuapp.com/http://api.foodforthoughtt.me/restaurant';\n    fetch(url).then(response => response.json()).then(data => {\n      console.log(data);\n      this.setState({\n        elements: data,\n        resetElements: data\n      });\n    });\n  }\n\n  render() {\n    var numElements = Math.max(this.state.elements.length, this.state.searchElements.length);\n    var filterComp;\n    var dropdownSet = new Set();\n    var dropdownList = [];\n\n    if (this.state.dropdownLabel === 'Cost') {\n      let i;\n\n      for (i = 0; i < this.state.elements.length; i++) {\n        var dict = this.state.elements[i];\n        var attributes = dict[this.state.filterKey].split(',');\n        let j;\n\n        for (j = 0; j < attributes.length; j++) dropdownSet.add(attributes[j]);\n      }\n\n      dropdownList = Array.from(dropdownSet);\n      var dictList = [];\n\n      for (i = 0; i < dropdownList.length; i++) {\n        dictList.push({\n          value: dropdownList[i],\n          label: dropdownList[i].charAt(0).toUpperCase() + dropdownList[i].slice(1)\n        });\n      }\n\n      filterComp = React.createElement(\"div\", {\n        style: {\n          width: '700px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(Select, {\n        className: \"ml-2\",\n        isMulti: true,\n        closeMenuOnSelect: false,\n        value: this.state.selectedOptionsCost,\n        onChange: this.handleSelectCost,\n        options: dictList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }));\n    } else if (this.state.dropdownLabel === 'Cuisine') {\n      let i;\n\n      for (i = 0; i < this.state.elements.length; i++) {\n        var dict = this.state.elements[i];\n        var attributes = dict[this.state.filterKey].split(',');\n        let j;\n\n        for (j = 0; j < attributes.length; j++) dropdownSet.add(attributes[j]);\n      }\n\n      dropdownList = Array.from(dropdownSet);\n      var dictList = [];\n\n      for (i = 0; i < dropdownList.length; i++) {\n        dictList.push({\n          value: dropdownList[i],\n          label: dropdownList[i].charAt(0).toUpperCase() + dropdownList[i].slice(1)\n        });\n      }\n\n      filterComp = React.createElement(\"div\", {\n        style: {\n          width: '700px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(Select, {\n        className: \"ml-2\",\n        isMulti: true,\n        closeMenuOnSelect: false,\n        value: this.state.selectedOptionsCuisine,\n        onChange: this.handleSelectCuisine,\n        options: dictList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }));\n    } else if (this.state.dropdownLabel === 'Location') {\n      let i;\n\n      for (i = 0; i < this.state.elements.length; i++) {\n        var dict = this.state.elements[i];\n        var attributes = dict[this.state.filterKey].split(',');\n        let j;\n\n        for (j = 0; j < attributes.length; j++) dropdownSet.add(attributes[j]);\n      }\n\n      dropdownList = Array.from(dropdownSet);\n      var dictList = [];\n\n      for (i = 0; i < dropdownList.length; i++) {\n        dictList.push({\n          value: dropdownList[i],\n          label: dropdownList[i].charAt(0).toUpperCase() + dropdownList[i].slice(1)\n        });\n      }\n\n      filterComp = React.createElement(\"div\", {\n        style: {\n          width: '700px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(Select, {\n        className: \"ml-2\",\n        isMulti: true,\n        closeMenuOnSelect: false,\n        value: this.state.selectedOptionsAddress,\n        onChange: this.handleSelectAddress,\n        options: dictList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }));\n    } else {\n      filterComp = React.createElement(\"form\", {\n        class: \"form-inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        class: \"sr-only\",\n        for: \"inlineFormInputName2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"input\", {\n        type: \"number\",\n        min: \"0\",\n        name: \"min\",\n        value: this.state.min,\n        onChange: this.handleChange,\n        class: \"form-control mb-2 ml-4 mr-sm-2\",\n        id: \"inlineFormInputName2\",\n        placeholder: \"Min\",\n        style: {\n          width: '60px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        class: \"sr-only\",\n        for: \"inlineFormInputName2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"input\", {\n        type: \"number\",\n        min: \"0\",\n        name: \"max\",\n        value: this.state.max,\n        onChange: this.handleChange,\n        class: \"form-control mb-2 ml-1 mr-sm-2\",\n        id: \"inlineFormInputName2\",\n        placeholder: \"Max\",\n        style: {\n          width: '60px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"img-fluid\",\n      style: this.styles.background,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      class: \"display-1 mb-4\",\n      style: this.styles.header,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, \"Restaurant \", this.state.costFilter, React.createElement(\"small\", {\n      style: {\n        color: 'orange'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, \" (\", numElements, \")\")), React.createElement(\"div\", {\n      class: \"justify-content-md-center row mb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(Form, {\n      inline: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      onSubmit: this.search,\n      onChange: this.handleChange,\n      name: \"searchParams\",\n      value: this.state.searchParams,\n      type: \"text\",\n      placeholder: \"Search for retaurants\",\n      className: \"mr-sm-2\",\n      style: {\n        width: '350px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }), React.createElement(Button, {\n      style: {\n        color: 'black'\n      },\n      variant: \"warning\",\n      onClick: this.search,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, \"Search\"))), React.createElement(\"div\", {\n      class: \"justify-content-md-center row mb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      isOpen: this.state.dropdownOpen,\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(DropdownToggle, {\n      color: \"warning\",\n      caret: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, this.state.dropdownLabel), React.createElement(DropdownMenu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(DropdownItem, {\n      onClick: this.changeFilterTag,\n      id: \"Cost\",\n      fkey: \"price_range\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, \"Cost\"), React.createElement(DropdownItem, {\n      onClick: this.changeFilterTag,\n      id: \"Cuisine\",\n      fkey: \"category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, \"Cuisine\"), React.createElement(DropdownItem, {\n      onClick: this.changeFilterTag,\n      id: \"Location\",\n      fkey: \"address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, \"Location\"), React.createElement(DropdownItem, {\n      onClick: this.changeFilterTag,\n      id: \"Rating\",\n      fkey: \"rating\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, \"Rating\"), React.createElement(DropdownItem, {\n      onClick: this.changeFilterTag,\n      id: \"Yelp Reviews\",\n      fkey: \"review_count\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, \"Yelp Reviews\"))), filterComp, React.createElement(\"button\", {\n      class: \"btn btn-warning ml-4\",\n      onClick: this.applyFilter,\n      style: {\n        height: '37px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, \"Filter\"), React.createElement(\"button\", {\n      class: \"btn btn-warning ml-4\",\n      onClick: this.sort,\n      style: {\n        height: '37px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, \"Sort\"), React.createElement(\"button\", {\n      class: \"btn btn-primary ml-3\",\n      onClick: this.handleReset,\n      style: {\n        height: '37px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, \"Reset\")), React.createElement(SearchCardGrid, {\n      elements: this.state.searchElements,\n      params: this.state.searchParams,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }), React.createElement(RestaurantCardGrid, {\n      link: this.state.link,\n      elements: this.state.elements,\n      currentPage: this.state.page,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }), React.createElement(PageNav, {\n      label: \"Food Page Navigator\",\n      page: this.state.page,\n      decrementPage: this.decrementPage,\n      incrementPage: this.incrementPage,\n      lastPage: this.state.elements.length / 9,\n      goFirstPage: this.goFirstPage,\n      goLastPage: this.goLastPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      class: \"let\",\n      style: {\n        fontSize: 30,\n        color: 'aliceblue',\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, \"of \", Math.ceil(this.state.elements.length / 9)));\n  }\n\n}\n\nexport default Restaurant;","map":{"version":3,"sources":["/Users/murray/Developer/coursework/software_engineering_cs373/foodforthoughts/src/pages/restaurant.js"],"names":["React","Select","backImage","RestaurantCardGrid","PageNav","SearchCardGrid","Form","Button","FormControl","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","Restaurant","Component","constructor","props","search","searchElements","state","elements","filter","dict","found","key","toLowerCase","includes","searchParams","toString","setState","compare","a","b","dropdownLabel","charAt","slice","sort","incrementPage","page","decrementPage","goFirstPage","goLastPage","Math","ceil","length","styles","image","width","height","background","backgroundImage","overflow","backgroundRepeat","backgroundPosition","backgroundSize","backgroundAttachment","header","textAlign","color","fontSize","toggle","prevState","dropdownOpen","toggleMid","midDropdownOpen","changeFilterTag","label","currentTarget","getAttribute","filterKey","handleChange","target","name","value","handleReset","resetElements","cuisineFilter","locationFilter","costFilter","selectedOptionsCuisine","selectedOptionsLocation","selectedOptionsCost","min","max","applyFilter","pass","i","handleSelectCost","map","o","handleSelectAddress","selectedOptionsAddress","handleSelectCuisine","link","componentDidMount","url","fetch","then","response","json","data","console","log","render","numElements","filterComp","dropdownSet","Set","dropdownList","attributes","split","j","add","Array","from","dictList","push","toUpperCase"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Select from 'react-select';\nimport backImage from '../photos/rest_image.jpg';\nimport {RestaurantCardGrid} from \"../components/infocard.js\";\nimport {PageNav} from '../components/pageNav.js';\nimport {SearchCardGrid} from '../components/searchCard.js';\nimport {Form,Button, FormControl} from 'react-bootstrap';\nimport '../App.css';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\n\n\nclass Restaurant extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      elements: [],\n      resetElements: [],\n      searchElements: [],\n      page: 0,\n      link: '/RestaurantPage',\n      dropdownOpen: false,\n      midDropdownOpen: false,\n      dropdownLabel: 'Attributes',\n      cuisineFilter: [],\n      locationFilter: [],\n      costFilter: [],\n      filterKey: 'init',\n      min: null,\n      max: null,\n      selectedOptionsAddress: [],\n      selectedOptionsCost: [],\n      selectedOptionsCuisine: [],\n      searchParams: ''\n    }\n  }\n  \n  componentDidMount() {\n    let url = 'https://cors-anywhere.herokuapp.com/http://api.foodforthoughtt.me/restaurant';\n    fetch(url)\n    .then(response => response.json())\n    .then(data => {\n      console.log(data);\n      this.setState({elements: data, resetElements: data});\n    })\n  }\n\n  search = () => {\n    var searchElements = this.state.elements.filter(dict => \n      {\n        var found = false;\n        for(let key in dict) {\n          if(typeof(dict[key]) == 'string' && dict[key].toLowerCase().includes((this.state.searchParams).toLowerCase()))\n            found = true;\n          else if(typeof(dict[key]) != 'string' && dict[key].toString().toLowerCase().includes((this.state.searchParams).toLowerCase()))\n            found = true;\n        }\n        return found;\n      });\n    this.setState({searchElements: searchElements, elements: []})\n\n  }\n\n  compare = (a, b) => {\n    let key = 'name';\n    if (this.state.dropdownLabel != 'Attributes') {\n      key = this.state.dropdownLabel.charAt(0).toLowerCase() + this.state.dropdownLabel.slice(1);\n    }\n    if ( a[key] < b[key] ){\n      return -1;\n    }\n    if ( a[key] > b[key] ){\n      return 1;\n    }\n    return 0;\n  }\n\n  sort = () => {\n    this.setState({elements: this.state.elements.sort(this.compare)});\n  }\n  \n  incrementPage = () => {\n    const page = this.state.page + 1;\n    this.setState({page});\n  }\n\n  decrementPage = () => {\n    const page = this.state.page - 1;\n    this.setState({page});\n  }\n\n  goFirstPage = () => {\n    const page = 0;\n    this.setState({page});\n  }\n\n  goLastPage = () => {\n    const page = Math.ceil(this.state.elements.length/9) - 1;\n    this.setState({page});\n  }\n\n  styles = {\n    image: {\n      width: 200,\n      height: 150,\n    },\n\n    background:{\n      backgroundImage: `url(${backImage}`,\n      height: '210vh', // 220 vh\n      width: '100vw',\n      overflow: 'auto',\n      backgroundRepeat: 'no-repeat',\n      backgroundPosition: 'center',\n      backgroundSize: 'cover',\n      backgroundAttachment: 'fixed'\n    },\n\n    header: {\n      textAlign: 'center',\n      color: 'aliceblue',\n      fontSize: 150\n    },\n  };\n  toggle = () => {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n\n  toggleMid = () => {\n    this.setState(prevState => ({\n      midDropdownOpen: !prevState.midDropdownOpen\n    }));\n  }\n  \n  changeFilterTag = (label) => {\n    this.setState({dropdownLabel: label.currentTarget.getAttribute(\"id\"), filterKey: label.currentTarget.getAttribute(\"fkey\")})\n  }\n  \n  handleChange = ({target}) => {\n    this.setState({[target.name]: target.value})\n  }\n  \n  handleReset = () => {\n    this.setState({\n      elements: this.state.resetElements,\n      searchElements: [], \n      cuisineFilter: [], \n      locationFilter: [], \n      costFilter: [],\n      selectedOptionsCuisine: [], \n      selectedOptionsLocation: [],\n      selectedOptionsCost: [],\n      min: null,\n      max: null\n    })\n  }\n  \n  applyFilter = () => {\n    if(this.state.dropdownLabel === 'Rating' || this.state.dropdownLabel === 'Yelp Reviews') {\n      var elements = this.state.elements.filter(dict => {\n          return (dict[this.state.filterKey] >= this.state.min && dict[this.state.filterKey] <= this.state.max)   \n        })\n      this.setState({elements})\n    }\n    else {\n      var elements = this.state.elements.filter(dict => {\n          var pass = true;\n          var found = false;\n          let i;\n          for(i=0; i<this.state.cuisineFilter.length; i++)\n            if(!dict['category'].includes(this.state.cuisineFilter[i]))\n              pass = false;\n          for(i=0; i<this.state.locationFilter.length; i++)\n            if(!dict['address'].includes(this.state.locationFilter[i]))\n              pass = false;\n          for(i=0; i<this.state.costFilter.length; i++) {\n            if(dict['price_range'] === (this.state.costFilter[i]))\n              found = true;\n            pass = found;\n          }\n          return pass;\n      })\n      this.setState({elements})\n    }\n  }\n\n  handleSelectCost = (selectedOptionsCost) => {\n    this.setState({selectedOptionsCost});\n    if(this.state.dropdownLabel === 'Cost' && selectedOptionsCost != null)\n      this.setState({costFilter: selectedOptionsCost.map(o => o.value)})\n  }\n\n  handleSelectAddress = (selectedOptionsAddress) => {\n    this.setState({selectedOptionsAddress})\n    if(this.state.dropdownLabel === 'Location' && selectedOptionsAddress!= null)\n      this.setState({locationFilter: selectedOptionsAddress.map(o => o.value)})\n  }\n\n  handleSelectCuisine = (selectedOptionsCuisine) => {\n    this.setState({selectedOptionsCuisine})\n    if(this.state.dropdownLabel === 'Cuisine' && selectedOptionsCuisine!= null)\n      this.setState({cuisineFilter: selectedOptionsCuisine.map(o => o.value)})\n  }\n\n  render() {\n    var numElements = Math.max(this.state.elements.length, this.state.searchElements.length);\n    var filterComp;\n    var dropdownSet = new Set();\n    var dropdownList = [];\n    if(this.state.dropdownLabel === 'Cost') {\n      let i;\n      for (i=0; i<this.state.elements.length; i++) {\n        var dict = this.state.elements[i];\n        var attributes = dict[this.state.filterKey].split(',');\n        let j;\n        for(j=0; j<attributes.length; j++)\n          dropdownSet.add(attributes[j]);\n      }\n      dropdownList = Array.from(dropdownSet);\n      var dictList = [];\n      for(i=0; i<dropdownList.length; i++){\n        dictList.push({value: dropdownList[i], label: dropdownList[i].charAt(0).toUpperCase() + dropdownList[i].slice(1)});\n      }\n      filterComp = <div style={{width: '700px'}}>\n      <Select className=\"ml-2\" isMulti closeMenuOnSelect={false} value={this.state.selectedOptionsCost} onChange={this.handleSelectCost} options={dictList}/>\n      </div>;\n    }\n    else if(this.state.dropdownLabel === 'Cuisine') {\n      let i;\n      for (i=0; i<this.state.elements.length; i++) {\n        var dict = this.state.elements[i];\n        var attributes = dict[this.state.filterKey].split(',');\n        let j;\n        for(j=0; j<attributes.length; j++)\n          dropdownSet.add(attributes[j]);\n      }\n      dropdownList = Array.from(dropdownSet);\n      var dictList = [];\n      for(i=0; i<dropdownList.length; i++){\n        dictList.push({value: dropdownList[i], label: dropdownList[i].charAt(0).toUpperCase() + dropdownList[i].slice(1)});\n      }\n      filterComp = <div style={{width: '700px'}}>\n      <Select className=\"ml-2\" isMulti closeMenuOnSelect={false} value={this.state.selectedOptionsCuisine} onChange={this.handleSelectCuisine} options={dictList}/>\n      </div>;\n    }\n    else if(this.state.dropdownLabel === 'Location') {\n      let i;\n      for (i=0; i<this.state.elements.length; i++) {\n        var dict = this.state.elements[i];\n        var attributes = dict[this.state.filterKey].split(',');\n        let j;\n        for(j=0; j<attributes.length; j++)\n          dropdownSet.add(attributes[j]);\n      }\n      dropdownList = Array.from(dropdownSet);\n      var dictList = [];\n      for(i=0; i<dropdownList.length; i++){\n        dictList.push({value: dropdownList[i], label: dropdownList[i].charAt(0).toUpperCase() + dropdownList[i].slice(1)});\n      }\n      filterComp = <div style={{width: '700px'}}>\n      <Select className=\"ml-2\" isMulti closeMenuOnSelect={false} value={this.state.selectedOptionsAddress} onChange={this.handleSelectAddress} options={dictList}/>\n      </div>;\n    }\n    else {\n      filterComp = <form class=\"form-inline\">\n      <label class=\"sr-only\" for=\"inlineFormInputName2\">Name</label>\n      <input type=\"number\" min=\"0\" name=\"min\" value={this.state.min} onChange={this.handleChange} class=\"form-control mb-2 ml-4 mr-sm-2\" id=\"inlineFormInputName2\" placeholder=\"Min\" style={{width: '60px'}}></input>\n      <label class=\"sr-only\" for=\"inlineFormInputName2\">Name</label>\n      <input type=\"number\" min=\"0\" name=\"max\" value={this.state.max} onChange={this.handleChange} class=\"form-control mb-2 ml-1 mr-sm-2\" id=\"inlineFormInputName2\" placeholder=\"Max\" style={{width: '60px'}}></input>\n      </form>;\n    }\n    return (\n      \n      \n      <div className=\"img-fluid\" style={this.styles.background}>\n        <h1 class=\"display-1 mb-4\" style={this.styles.header}>Restaurant {this.state.costFilter}\n        <small style={{color:'orange'}}> ({numElements})</small></h1>\n          <div class=\"justify-content-md-center row mb-5\">\n            <Form inline>\n                  <FormControl onSubmit={this.search} onChange={this.handleChange} name=\"searchParams\" value={this.state.searchParams} type=\"text\" placeholder=\"Search for retaurants\" className=\"mr-sm-2\" style={{width: '350px'}} />\n                  <Button style={{color: 'black'}} variant=\"warning\" onClick={this.search}>Search</Button>\n            </Form>\n          </div>\n          <div class=\"justify-content-md-center row mb-5\">\n          <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n            <DropdownToggle color=\"warning\" caret>\n              {this.state.dropdownLabel}\n            </DropdownToggle>\n            <DropdownMenu>\n              <DropdownItem onClick={this.changeFilterTag} id='Cost' fkey='price_range'>Cost</DropdownItem>\n              <DropdownItem onClick={this.changeFilterTag} id='Cuisine' fkey='category'>Cuisine</DropdownItem>\n              <DropdownItem onClick={this.changeFilterTag} id='Location' fkey='address'>Location</DropdownItem>\n              <DropdownItem onClick={this.changeFilterTag} id='Rating' fkey='rating'>Rating</DropdownItem>\n              <DropdownItem onClick={this.changeFilterTag} id='Yelp Reviews' fkey='review_count'>Yelp Reviews</DropdownItem>\n            </DropdownMenu>\n          </Dropdown>\n          {filterComp}\n          <button class=\"btn btn-warning ml-4\" onClick={this.applyFilter} style={{height: '37px'}}>Filter</button>\n          <button class=\"btn btn-warning ml-4\" onClick={this.sort} style={{height: '37px'}}>Sort</button>\n          <button class=\"btn btn-primary ml-3\" onClick={this.handleReset} style={{height: '37px'}}>Reset</button>\n        </div> \n        <SearchCardGrid elements={this.state.searchElements} params={this.state.searchParams}/>\n        <RestaurantCardGrid link={this.state.link} elements={this.state.elements} currentPage={this.state.page}/>\n        <PageNav label='Food Page Navigator' page={this.state.page} decrementPage = {this.decrementPage}\n         incrementPage = {this.incrementPage} lastPage={this.state.elements.length/9} goFirstPage = {this.goFirstPage} goLastPage = {this.goLastPage}/>\n        <p class=\"let\" style={{fontSize: 30, color: 'aliceblue', textAlign: 'center'}}>of {Math.ceil(this.state.elements.length/9)}</p>\n      </div> \n    )\n  }\n}\n\nexport default Restaurant"]},"metadata":{},"sourceType":"module"}