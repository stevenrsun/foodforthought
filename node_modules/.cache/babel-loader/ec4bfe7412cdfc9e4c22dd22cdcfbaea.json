{"ast":null,"code":"var _jsxFileName = \"/u/steveguy/Documents/foodforthoughts/src/pages/disease.js\";\nimport React from 'react';\nimport backImage from '../photos/disease_background.jpg';\nimport { DiseaseCardGrid } from \"../components/infocard.js\";\nimport { PageNav } from '../components/pageNav.js';\nimport '../App.css';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nclass disease extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.incrementPage = () => {\n      const page = this.state.page + 1;\n      this.setState({\n        page\n      });\n    };\n\n    this.decrementPage = () => {\n      const page = this.state.page - 1;\n      this.setState({\n        page\n      });\n    };\n\n    this.goFirstPage = () => {\n      const page = 0;\n      this.setState({\n        page\n      });\n    };\n\n    this.goLastPage = () => {\n      const page = Math.ceil(this.state.elements.length / 9) - 1;\n      this.setState({\n        page\n      });\n    };\n\n    this.styles = {\n      image: {\n        width: 200,\n        height: 150\n      },\n      background: {\n        backgroundImage: \"url(\".concat(backImage),\n        height: '210vh',\n        // 220 vh\n        width: '100vw',\n        overflow: 'auto',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n        backgroundSize: 'cover',\n        backgroundAttachment: 'fixed'\n      },\n      header: {\n        textAlign: 'center',\n        color: 'aliceblue',\n        fontSize: 150\n      }\n    };\n\n    this.toggle = () => {\n      this.setState(prevState => ({\n        dropdownOpen: !prevState.dropdownOpen\n      }));\n    };\n\n    this.toggleMid = () => {\n      this.setState(prevState => ({\n        midDropdownOpen: !prevState.midDropdownOpen\n      }));\n    };\n\n    this.changeFilterTag = label => {\n      this.setState({\n        dropdownLabel: label.currentTarget.getAttribute(\"id\"),\n        filterKey: label.currentTarget.getAttribute(\"fkey\")\n      });\n    };\n\n    this.handleChange = ({\n      target\n    }) => {\n      this.setState({\n        [target.name]: target.value\n      });\n    };\n\n    this.handleReset = () => {\n      this.setState({\n        elements: this.state.resetElements\n      });\n    };\n\n    this.applyFilter = () => {\n      var filterElements = this.state.elements.filter(dict => {\n        return dict[this.state.filterKey] >= this.state.min && dict[this.state.filterKey] <= this.state.max;\n      });\n      this.setState({\n        elements: filterElements\n      });\n    };\n\n    this.state = {\n      elements: [],\n      resetElements: [],\n      page: 0,\n      link: '/DiseasePage',\n      dropdownOpen: false,\n      midDropdownOpen: false,\n      dropdownLabel: 'Attributes',\n      filterKey: 'init',\n      min: '0',\n      max: '0'\n    };\n  }\n\n  componentDidMount() {\n    let url = 'https://cors-anywhere.herokuapp.com/http://api.foodforthoughtt.me/disease';\n    console.log(\"first\");\n    fetch(url).then(response => response.json()).then(data => {\n      console.log(data);\n      this.setState({\n        elements: data,\n        resetElements: data\n      });\n    });\n  }\n\n  render() {\n    var filterComp;\n    var dropdownSet = new Set();\n    var dropdownList = [];\n\n    if (this.state.dropdownLabel === 'Causes' || this.state.dropdownLabel === 'Symptoms') {\n      let i;\n\n      for (i = 0; i < this.state.elements.length; i++) {\n        var dict = this.state.elements[i];\n        var attributes = dict[this.state.filterKey].split(',');\n        let j;\n\n        for (j = 0; j < attributes.length; j++) dropdownSet.add(attributes[j]);\n      }\n\n      for (i = 0; i < dropdownSet.length; i++) dropdownList.push(React.createElement(DropdownItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, dropdownSet[i]));\n\n      filterComp = React.createElement(Dropdown, {\n        isOpen: this.state.midDropdownOpen,\n        toggle: this.toggleMid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(DropdownToggle, {\n        color: \"light\",\n        caret: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Select\"), React.createElement(DropdownMenu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, dropdownList));\n    } else filterComp = React.createElement(\"form\", {\n      class: \"form-inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      class: \"sr-only\",\n      for: \"inlineFormInputName2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      type: \"number\",\n      min: \"0\",\n      name: \"min\",\n      value: this.state.min,\n      onChange: this.handleChange,\n      class: \"form-control mb-2 ml-4 mr-sm-2\",\n      id: \"inlineFormInputName2\",\n      placeholder: \"Min\",\n      style: {\n        width: '60px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      class: \"sr-only\",\n      for: \"inlineFormInputName2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      type: \"number\",\n      min: \"0\",\n      name: \"max\",\n      value: this.state.max,\n      onChange: this.handleChange,\n      class: \"form-control mb-2 ml-1 mr-sm-2\",\n      id: \"inlineFormInputName2\",\n      placeholder: \"Max\",\n      style: {\n        width: '60px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }));\n\n    return React.createElement(\"div\", {\n      className: \"img-fluid\",\n      style: this.styles.background,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      class: \"display-1 mb-4\",\n      style: this.styles.header,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Disease\", React.createElement(\"small\", {\n      style: {\n        color: 'orange'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \" (\", this.state.elements.length, \")\")), React.createElement(\"div\", {\n      class: \"justify-content-md-center row mb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      isOpen: this.state.dropdownOpen,\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(DropdownToggle, {\n      color: \"warning\",\n      caret: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, this.state.dropdownLabel), React.createElement(DropdownMenu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(DropdownItem, {\n      onClick: this.changeFilterTag,\n      id: \"Average age affected\",\n      fkey: \"age\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Average age affected\"), React.createElement(DropdownItem, {\n      onClick: this.changeFilterTag,\n      id: \"Causes\",\n      fkey: \"cause\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Causes\"), React.createElement(DropdownItem, {\n      onClick: this.changeFilterTag,\n      id: \"Deaths per year\",\n      fkey: \"deaths\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Deaths per year\"), React.createElement(DropdownItem, {\n      onClick: this.changeFilterTag,\n      id: \"Symptoms\",\n      fkey: \"symptom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Symptoms\"), React.createElement(DropdownItem, {\n      onClick: this.changeFilterTag,\n      id: \"Diagnosed per year\",\n      fkey: \"frequency\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Diagnosed per year\"))), filterComp, React.createElement(\"button\", {\n      class: \"btn btn-warning ml-4\",\n      onClick: this.applyFilter,\n      style: {\n        height: '37px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Filter\"), React.createElement(\"button\", {\n      class: \"btn btn-primary ml-3\",\n      onClick: this.handleReset,\n      style: {\n        height: '37px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Reset\")), React.createElement(DiseaseCardGrid, {\n      link: this.state.link,\n      elements: this.state.elements,\n      currentPage: this.state.page,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(PageNav, {\n      label: \"Disease Page Navigator\",\n      page: this.state.page,\n      decrementPage: this.decrementPage,\n      incrementPage: this.incrementPage,\n      lastPage: this.state.elements.length / 9,\n      goFirstPage: this.goFirstPage,\n      goLastPage: this.goLastPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      class: \"let\",\n      style: {\n        fontSize: 30,\n        color: 'aliceblue',\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"of \", Math.ceil(this.state.elements.length / 9)));\n  }\n\n}\n\nexport default disease;","map":{"version":3,"sources":["/u/steveguy/Documents/foodforthoughts/src/pages/disease.js"],"names":["React","backImage","DiseaseCardGrid","PageNav","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","disease","Component","constructor","props","incrementPage","page","state","setState","decrementPage","goFirstPage","goLastPage","Math","ceil","elements","length","styles","image","width","height","background","backgroundImage","overflow","backgroundRepeat","backgroundPosition","backgroundSize","backgroundAttachment","header","textAlign","color","fontSize","toggle","prevState","dropdownOpen","toggleMid","midDropdownOpen","changeFilterTag","label","dropdownLabel","currentTarget","getAttribute","filterKey","handleChange","target","name","value","handleReset","resetElements","applyFilter","filterElements","filter","dict","min","max","link","componentDidMount","url","console","log","fetch","then","response","json","data","render","filterComp","dropdownSet","Set","dropdownList","i","attributes","split","j","add","push"],"mappings":"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","sourcesContent":["import React from 'react';\nimport backImage from '../photos/disease_background.jpg';\nimport {DiseaseCardGrid} from \"../components/infocard.js\";\nimport {PageNav} from '../components/pageNav.js';\nimport '../App.css';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nclass disease extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      elements: [],\n      resetElements: [],\n      page: 0,\n      link: '/DiseasePage',\n      dropdownOpen: false,\n      midDropdownOpen: false,\n      dropdownLabel: 'Attributes',\n      filterKey: 'init',\n      min: '0',\n      max: '0'\n    }\n  }\n  \n  componentDidMount() {\n    let url = 'https://cors-anywhere.herokuapp.com/http://api.foodforthoughtt.me/disease';\n    console.log(\"first\");\n    fetch(url)\n    .then(response => response.json())\n    .then(data => {\n      console.log(data);\n      this.setState({elements: data, resetElements: data});\n    })\n  }\n  \n  incrementPage = () => {\n    const page = this.state.page + 1;\n    this.setState({page});\n  }\n\n  decrementPage = () => {\n    const page = this.state.page - 1;\n    this.setState({page});\n  }\n\n  goFirstPage = () => {\n    const page = 0;\n    this.setState({page});\n  }\n\n  goLastPage = () => {\n    const page = Math.ceil(this.state.elements.length/9) - 1;\n    this.setState({page});\n  }\n\n  styles = {\n    image: {\n      width: 200,\n      height: 150,\n    },\n\n    background:{\n      backgroundImage: `url(${backImage}`,\n      height: '210vh', // 220 vh\n      width: '100vw',\n      overflow: 'auto',\n      backgroundRepeat: 'no-repeat',\n      backgroundPosition: 'center',\n      backgroundSize: 'cover',\n      backgroundAttachment: 'fixed'\n    },\n\n    header: {\n      textAlign: 'center',\n      color: 'aliceblue',\n      fontSize: 150\n    },\n  };\n\n  toggle = () => {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n\n  toggleMid = () => {\n    this.setState(prevState => ({\n      midDropdownOpen: !prevState.midDropdownOpen\n    }));\n  }\n  \n  changeFilterTag = (label) => {\n    this.setState({dropdownLabel: label.currentTarget.getAttribute(\"id\"), filterKey: label.currentTarget.getAttribute(\"fkey\")})\n  }\n  \n  handleChange = ({target}) => {\n    this.setState({[target.name]: target.value})\n  }\n  \n  handleReset = () => {\n    this.setState({elements: this.state.resetElements})\n  }\n  \n  applyFilter = () => {\n    var filterElements = this.state.elements.filter(dict => {\n        return (dict[this.state.filterKey] >= this.state.min && dict[this.state.filterKey] <= this.state.max)   \n      })\n    this.setState({elements: filterElements})\n  }\n  \n  render() {\n    var filterComp;\n    var dropdownSet = new Set();\n    var dropdownList = [];\n    if(this.state.dropdownLabel === 'Causes' || this.state.dropdownLabel === 'Symptoms') {\n      let i;\n      for (i=0; i<this.state.elements.length; i++) {\n        var dict = this.state.elements[i];\n        var attributes = dict[this.state.filterKey].split(',');\n        let j;\n        for(j=0; j<attributes.length; j++)\n          dropdownSet.add(attributes[j]);\n      }\n      for (i=0; i<dropdownSet.length; i++)\n        dropdownList.push(<DropdownItem>{dropdownSet[i]}</DropdownItem>);\n      filterComp = \n      <Dropdown isOpen={this.state.midDropdownOpen} toggle={this.toggleMid}>\n        <DropdownToggle color=\"light\" caret>\n          Select\n        </DropdownToggle>\n        <DropdownMenu>\n          {dropdownList}\n        </DropdownMenu>\n      </Dropdown>;\n    }\n    else \n      filterComp = <form class=\"form-inline\">\n      <label class=\"sr-only\" for=\"inlineFormInputName2\">Name</label>\n      <input type=\"number\" min=\"0\" name=\"min\" value={this.state.min} onChange={this.handleChange} class=\"form-control mb-2 ml-4 mr-sm-2\" id=\"inlineFormInputName2\" placeholder=\"Min\" style={{width: '60px'}}></input>\n      <label class=\"sr-only\" for=\"inlineFormInputName2\">Name</label>\n      <input type=\"number\" min=\"0\" name=\"max\" value={this.state.max} onChange={this.handleChange} class=\"form-control mb-2 ml-1 mr-sm-2\" id=\"inlineFormInputName2\" placeholder=\"Max\" style={{width: '60px'}}></input>\n      </form>;\n    \n    return (\n      <div className=\"img-fluid\" style={this.styles.background}>\n        <h1 class=\"display-1 mb-4\" style={this.styles.header}>Disease\n        <small style={{color:'orange'}}> ({this.state.elements.length})</small></h1>\n\n        <div class=\"justify-content-md-center row mb-5\">\n          <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n            <DropdownToggle color=\"warning\" caret>\n              {this.state.dropdownLabel}\n            </DropdownToggle>\n            <DropdownMenu>\n              <DropdownItem onClick={this.changeFilterTag} id='Average age affected' fkey='age'>Average age affected</DropdownItem>\n              <DropdownItem onClick={this.changeFilterTag} id='Causes' fkey='cause'>Causes</DropdownItem>\n              <DropdownItem onClick={this.changeFilterTag} id='Deaths per year' fkey='deaths'>Deaths per year</DropdownItem>\n              <DropdownItem onClick={this.changeFilterTag} id='Symptoms' fkey='symptom'>Symptoms</DropdownItem>\n              <DropdownItem onClick={this.changeFilterTag} id='Diagnosed per year' fkey='frequency'>Diagnosed per year</DropdownItem>\n            </DropdownMenu>\n          </Dropdown>\n          {filterComp}\n          <button class=\"btn btn-warning ml-4\" onClick={this.applyFilter} style={{height: '37px'}}>Filter</button>\n          <button class=\"btn btn-primary ml-3\" onClick={this.handleReset} style={{height: '37px'}}>Reset</button>\n        </div>\n\n        <DiseaseCardGrid link={this.state.link} elements={this.state.elements} currentPage={this.state.page}/>\n        <PageNav label='Disease Page Navigator' page={this.state.page} decrementPage = {this.decrementPage}\n         incrementPage = {this.incrementPage} lastPage={this.state.elements.length/9} goFirstPage = {this.goFirstPage} goLastPage = {this.goLastPage}/>\n        <p class=\"let\" style={{fontSize: 30, color: 'aliceblue', textAlign: 'center'}}>of {Math.ceil(this.state.elements.length/9)}</p>\n      </div> \n    )\n  }\n}\n\nexport default disease"]},"metadata":{},"sourceType":"module"}