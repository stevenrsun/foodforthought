{"ast":null,"code":"var _jsxFileName = \"/Users/murray/Developer/coursework/software_engineering_cs373/foodforthoughts/src/components/BarChart.js\";\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\n\nclass BarChart extends Component {\n  componentDidMount() {\n    let url = 'https://cors-anywhere.herokuapp.com/http://api.foodforthoughtt.me/food';\n    var arr;\n    fetch(url).then(response => response.json()).then(data => {\n      arr = data;\n    }); // loop through array of dictionaries\n\n    for (dict in arr) {\n      arr.push([dict['name'], dict['calories']]);\n    }\n\n    this.drawBarChart(d);\n  }\n\n  drawBarChart(data) {\n    const canvasHeight = 400;\n    const canvasWidth = 600;\n    const scale = 20;\n    const svgCanvas = d3.select(this.refs.canvas).append(\"svg\").attr(\"width\", canvasWidth).attr(\"height\", canvasHeight).style(\"border\", \"1px solid black\");\n    svgCanvas.selectAll(\"rect\").data(data).enter().append(\"rect\").attr(\"width\", 40).attr(\"height\", datapoint => datapoint * scale).attr(\"fill\", \"orange\").attr(\"x\", (datapoint, iteration) => iteration * 45).attr(\"y\", datapoint => canvasHeight - datapoint * scale);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      ref: \"canvas\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default BarChart;","map":{"version":3,"sources":["/Users/murray/Developer/coursework/software_engineering_cs373/foodforthoughts/src/components/BarChart.js"],"names":["React","Component","d3","BarChart","componentDidMount","url","arr","fetch","then","response","json","data","dict","push","drawBarChart","d","canvasHeight","canvasWidth","scale","svgCanvas","select","refs","canvas","append","attr","style","selectAll","enter","datapoint","iteration","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAE7BG,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,GAAG,GAAG,wEAAV;AAEA,QAAIC,GAAJ;AACAC,IAAAA,KAAK,CAACF,GAAD,CAAL,CACCG,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI;AACZL,MAAAA,GAAG,GAAGK,IAAN;AACD,KAJD,EAJgB,CAUhB;;AACA,SAAKC,IAAL,IAAaN,GAAb,EAAkB;AACdA,MAAAA,GAAG,CAACO,IAAJ,CAAS,CAACD,IAAI,CAAC,MAAD,CAAL,EAAeA,IAAI,CAAC,UAAD,CAAnB,CAAT;AACH;;AAED,SAAKE,YAAL,CAAkBC,CAAlB;AACH;;AACDD,EAAAA,YAAY,CAACH,IAAD,EAAQ;AAChB,UAAMK,YAAY,GAAG,GAArB;AACA,UAAMC,WAAW,GAAG,GAApB;AACA,UAAMC,KAAK,GAAG,EAAd;AACA,UAAMC,SAAS,GAAGjB,EAAE,CAACkB,MAAH,CAAU,KAAKC,IAAL,CAAUC,MAApB,EACbC,MADa,CACN,KADM,EAEbC,IAFa,CAER,OAFQ,EAECP,WAFD,EAGbO,IAHa,CAGR,QAHQ,EAGER,YAHF,EAIbS,KAJa,CAIP,QAJO,EAIG,iBAJH,CAAlB;AAKAN,IAAAA,SAAS,CAACO,SAAV,CAAoB,MAApB,EACKf,IADL,CACUA,IADV,EACgBgB,KADhB,GAESJ,MAFT,CAEgB,MAFhB,EAGSC,IAHT,CAGc,OAHd,EAGuB,EAHvB,EAISA,IAJT,CAIc,QAJd,EAIyBI,SAAD,IAAeA,SAAS,GAAGV,KAJnD,EAKSM,IALT,CAKc,MALd,EAKsB,QALtB,EAMSA,IANT,CAMc,GANd,EAMmB,CAACI,SAAD,EAAYC,SAAZ,KAA0BA,SAAS,GAAG,EANzD,EAOSL,IAPT,CAOc,GAPd,EAOoBI,SAAD,IAAeZ,YAAY,GAAGY,SAAS,GAAGV,KAP7D;AASH;;AACDY,EAAAA,MAAM,GAAG;AACL,WAAQ;AAAK,MAAA,GAAG,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AACH;;AAxC4B;;AA0CjC,eAAe3B,QAAf","sourcesContent":["import React, { Component } from 'react'\nimport * as d3 from 'd3';\n\nclass BarChart extends Component {\n    \n    componentDidMount() {\n        let url = 'https://cors-anywhere.herokuapp.com/http://api.foodforthoughtt.me/food';\n\n        var arr;\n        fetch(url)\n        .then(response => response.json())\n        .then(data => {\n          arr = data;\n        })\n\n        // loop through array of dictionaries\n        for (dict in arr) {\n            arr.push([dict['name'], dict['calories']]);\n        }\n\n        this.drawBarChart(d)\n    }\n    drawBarChart(data)  {\n        const canvasHeight = 400\n        const canvasWidth = 600\n        const scale = 20\n        const svgCanvas = d3.select(this.refs.canvas)\n            .append(\"svg\")\n            .attr(\"width\", canvasWidth)\n            .attr(\"height\", canvasHeight)\n            .style(\"border\", \"1px solid black\")\n        svgCanvas.selectAll(\"rect\")\n            .data(data).enter()\n                .append(\"rect\")\n                .attr(\"width\", 40)\n                .attr(\"height\", (datapoint) => datapoint * scale)\n                .attr(\"fill\", \"orange\")\n                .attr(\"x\", (datapoint, iteration) => iteration * 45)\n                .attr(\"y\", (datapoint) => canvasHeight - datapoint * scale)\n    \n    }\n    render() { \n        return (<div ref=\"canvas\"></div>);\n    }\n}\nexport default BarChart"]},"metadata":{},"sourceType":"module"}