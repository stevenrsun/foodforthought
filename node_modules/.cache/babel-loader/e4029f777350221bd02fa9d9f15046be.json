{"ast":null,"code":"// // import React, { Component } from 'react';\n// // import * as d3 from \"d3\";\n// // import d3Tip  from \"d3-tip\";\n// // //This code is modified from Simple d3.js bar chart D3: http://bl.ocks.org/d3noob/8952219#bar-data.csv\n// // //with rainbow function from this codepen: https://codepen.io/chadoh/pen/NRXpKw\n// // class BarChart extends Component\n// // {\n// //   constructor(props) {\n// //     super(props);\n// //     this.state = {\n// //       isLoaded: false,\n// //       bottomText: \"Loading...\",\n// //       data: []\n// //     };\n// //   }\n// //   async componentDidMount() {\n// //     try {\n// //       // call API\n// //       let url = 'https://cors-anywhere.herokuapp.com/http://api.foodforthoughtt.me/food';\n// //       const response = await fetch(url);\n// //       // wait for response\n// //       if (!response.ok) {\n// //         throw Error(response.statusText);\n// //       }\n// //       const json = await response.json();\n// //       this.setState({ data: json });\n// //     } catch (error) {\n// //       console.log(error);\n// //     }\n// //     var labels = []\n// //     var values = []\n// //     for (let i=0; i < this.state.data.length; i++) {\n// //       labels.push(this.state.data[i]['name'])\n// //       values.push(this.state.data[i]['calories'])\n// //     }\n// //     this.drawBarChart(labels, values);\n// //   }\n// //   drawBarChart(labels, data)  {\n// //     const canvasHeight = 400\n// //     const canvasWidth = 600\n// //     const scale = 5\n// //     const svgCanvas = d3.select(this.refs.canvas)\n// //         .append(\"svg\")\n// //         .attr(\"width\", canvasWidth)\n// //         .attr(\"height\", canvasHeight)\n// //         .style(\"border\", \"1px solid black\")\n// //     svgCanvas.selectAll(\"rect\")\n// //         .data(data).enter()\n// //             .append(\"rect\")\n// //             .attr(\"width\", 40)\n// //             .attr(\"height\", (datapoint) => datapoint * scale)\n// //             .attr(\"fill\", \"orange\")\n// //             .attr(\"x\", (datapoint, iteration) => iteration * 45)\n// //             .attr(\"y\", (datapoint) => canvasHeight - datapoint * scale)\n// //     svgCanvas.selectAll(\"text\")\n// //       .data(data).enter()\n// //           .append(\"text\")\n// //           .attr(\"x\", (dataPoint, i) => i * 45 + 10)\n// //           .attr(\"y\", (dataPoint, i) => canvasHeight - dataPoint * scale - 10)\n// //           .text(dataPoint => dataPoint)\n// //   }\n// //   render() { \n// //     return <div ref=\"canvas\"></div> \n// //   }\n// // }\n// // export default BarChart;\n// import React from 'react'\n// import rd3 from 'react-d3-library'\n// import * as d3 from 'd3'\n// const RD3Component = rd3.Component;\n// async function loadChart() {\n//     var node = document.createElement('div');\n//     const apiData = await d3.json(\"https://cors-anywhere.herokuapp.com/http://api.foodforthoughtt.me/food\")\n//     var data = []\n//     for (let i=0; i < apiData.length; i++) {\n//       data.push({name: this.state.data[i]['name'], value: this.state.data[i]['calories']})\n//     }\n//     var margin = ({top: 30, right: 0, bottom: 10, left: 300})\n//     var width = 800;\n//     var height = data.length * 25 + margin.top + margin.bottom\n//     var svg = d3.select(node).append(\"svg\")\n//       .attr(\"width\", width)\n//       .attr(\"height\", height);\n//     const x = d3.scaleLinear()\n//         .domain([0, d3.max(data, d => d.value)])\n//         .range([margin.left, width - margin.right]) \n//     const y = d3.scaleBand()\n//         .domain(data.map(d => d.name))\n//         .range([margin.top, height - margin.bottom])\n//         .padding(0.1)\n//     const xAxis = g => g\n//         .attr(\"transform\", `translate(0,${margin.top})`)\n//         .call(d3.axisTop(x).ticks(width / 80))\n//         .call(g => g.select(\".domain\").remove())\n//     const yAxis = g => g\n//         .attr(\"transform\", `translate(${margin.left},0)`)\n//         .call(d3.axisLeft(y).tickSizeOuter(0))\n//     const format =  x.tickFormat(20);\n//     svg.append(\"g\")\n//         .attr(\"fill\", \"steelblue\")\n//         .selectAll(\"rect\")\n//         .data(data)\n//         .join(\"rect\")\n//             .attr(\"x\", x(0))\n//             .attr(\"y\", d => y(d.name))\n//             .attr(\"width\", d => x(d.value) - x(0))\n//             .attr(\"height\", y.bandwidth());\n//     svg.append(\"g\")\n//             .attr(\"fill\", \"white\")\n//             .attr(\"text-anchor\", \"end\")\n//             .style(\"font\", \"12px sans-serif\")\n//         .selectAll(\"text\")\n//         .data(data)\n//         .join(\"text\")\n//             .attr(\"x\", d => x(d.value) - 4)\n//             .attr(\"y\", d => y(d.name) + y.bandwidth() / 2)\n//             .attr(\"dy\", \"0.35em\")\n//             .text(d => format(d.value));\n//     svg.append(\"g\")\n//         .call(xAxis);\n//     svg.append(\"g\")\n//         .call(yAxis);\n//     return node;\n// }\n// export default class HorizontalBarChart extends React.Component {\n//     constructor(props) {\n//       super(props);\n//       this.state = {d3: ''}\n//     }\n//     componentDidMount() {\n//       loadChart().then((result) => {\n//         this.setState({d3: result});\n//       })\n//     }\n//     render() {\n//       return(<div><RD3Component data={this.state.d3}/></div>)\n//     }\n//   }","map":{"version":3,"sources":["/Users/murray/Developer/coursework/software_engineering_cs373/foodforthoughts/src/components/BarChart.js"],"names":[],"mappings":"AAAA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["// // import React, { Component } from 'react';\n// // import * as d3 from \"d3\";\n// // import d3Tip  from \"d3-tip\";\n\n\n\n// // //This code is modified from Simple d3.js bar chart D3: http://bl.ocks.org/d3noob/8952219#bar-data.csv\n// // //with rainbow function from this codepen: https://codepen.io/chadoh/pen/NRXpKw\n\n// // class BarChart extends Component\n// // {\n// //   constructor(props) {\n// //     super(props);\n// //     this.state = {\n// //       isLoaded: false,\n// //       bottomText: \"Loading...\",\n// //       data: []\n// //     };\n// //   }\n\n// //   async componentDidMount() {\n// //     try {\n// //       // call API\n// //       let url = 'https://cors-anywhere.herokuapp.com/http://api.foodforthoughtt.me/food';\n// //       const response = await fetch(url);\n// //       // wait for response\n// //       if (!response.ok) {\n// //         throw Error(response.statusText);\n// //       }\n// //       const json = await response.json();\n// //       this.setState({ data: json });\n// //     } catch (error) {\n// //       console.log(error);\n// //     }\n\n// //     var labels = []\n// //     var values = []\n// //     for (let i=0; i < this.state.data.length; i++) {\n// //       labels.push(this.state.data[i]['name'])\n// //       values.push(this.state.data[i]['calories'])\n// //     }\n// //     this.drawBarChart(labels, values);\n// //   }\n\n// //   drawBarChart(labels, data)  {\n// //     const canvasHeight = 400\n// //     const canvasWidth = 600\n// //     const scale = 5\n// //     const svgCanvas = d3.select(this.refs.canvas)\n// //         .append(\"svg\")\n// //         .attr(\"width\", canvasWidth)\n// //         .attr(\"height\", canvasHeight)\n// //         .style(\"border\", \"1px solid black\")\n// //     svgCanvas.selectAll(\"rect\")\n// //         .data(data).enter()\n// //             .append(\"rect\")\n// //             .attr(\"width\", 40)\n// //             .attr(\"height\", (datapoint) => datapoint * scale)\n// //             .attr(\"fill\", \"orange\")\n// //             .attr(\"x\", (datapoint, iteration) => iteration * 45)\n// //             .attr(\"y\", (datapoint) => canvasHeight - datapoint * scale)\n    \n// //     svgCanvas.selectAll(\"text\")\n// //       .data(data).enter()\n// //           .append(\"text\")\n// //           .attr(\"x\", (dataPoint, i) => i * 45 + 10)\n// //           .attr(\"y\", (dataPoint, i) => canvasHeight - dataPoint * scale - 10)\n// //           .text(dataPoint => dataPoint)\n// //   }\n\n// //   render() { \n// //     return <div ref=\"canvas\"></div> \n// //   }\n// // }\n\n// // export default BarChart;\n\n// import React from 'react'\n// import rd3 from 'react-d3-library'\n// import * as d3 from 'd3'\n\n// const RD3Component = rd3.Component;\n\n// async function loadChart() {\n//     var node = document.createElement('div');\n\n//     const apiData = await d3.json(\"https://cors-anywhere.herokuapp.com/http://api.foodforthoughtt.me/food\")\n\n//     var data = []\n//     for (let i=0; i < apiData.length; i++) {\n//       data.push({name: this.state.data[i]['name'], value: this.state.data[i]['calories']})\n//     }\n\n//     var margin = ({top: 30, right: 0, bottom: 10, left: 300})\n\n//     var width = 800;\n//     var height = data.length * 25 + margin.top + margin.bottom\n\n//     var svg = d3.select(node).append(\"svg\")\n//       .attr(\"width\", width)\n//       .attr(\"height\", height);\n    \n//     const x = d3.scaleLinear()\n//         .domain([0, d3.max(data, d => d.value)])\n//         .range([margin.left, width - margin.right]) \n    \n//     const y = d3.scaleBand()\n//         .domain(data.map(d => d.name))\n//         .range([margin.top, height - margin.bottom])\n//         .padding(0.1)\n    \n//     const xAxis = g => g\n//         .attr(\"transform\", `translate(0,${margin.top})`)\n//         .call(d3.axisTop(x).ticks(width / 80))\n//         .call(g => g.select(\".domain\").remove())\n\n//     const yAxis = g => g\n//         .attr(\"transform\", `translate(${margin.left},0)`)\n//         .call(d3.axisLeft(y).tickSizeOuter(0))\n\n//     const format =  x.tickFormat(20);\n\n    \n//     svg.append(\"g\")\n//         .attr(\"fill\", \"steelblue\")\n//         .selectAll(\"rect\")\n//         .data(data)\n//         .join(\"rect\")\n//             .attr(\"x\", x(0))\n//             .attr(\"y\", d => y(d.name))\n//             .attr(\"width\", d => x(d.value) - x(0))\n//             .attr(\"height\", y.bandwidth());\n    \n//     svg.append(\"g\")\n//             .attr(\"fill\", \"white\")\n//             .attr(\"text-anchor\", \"end\")\n//             .style(\"font\", \"12px sans-serif\")\n//         .selectAll(\"text\")\n//         .data(data)\n//         .join(\"text\")\n//             .attr(\"x\", d => x(d.value) - 4)\n//             .attr(\"y\", d => y(d.name) + y.bandwidth() / 2)\n//             .attr(\"dy\", \"0.35em\")\n//             .text(d => format(d.value));\n    \n//     svg.append(\"g\")\n//         .call(xAxis);\n    \n//     svg.append(\"g\")\n//         .call(yAxis);\n\n//     return node;\n    \n    \n// }\n\n// export default class HorizontalBarChart extends React.Component {\n//     constructor(props) {\n//       super(props);\n//       this.state = {d3: ''}\n//     }\n  \n//     componentDidMount() {\n//       loadChart().then((result) => {\n//         this.setState({d3: result});\n//       })\n//     }\n  \n//     render() {\n//       return(<div><RD3Component data={this.state.d3}/></div>)\n//     }\n//   }\n"]},"metadata":{},"sourceType":"module"}