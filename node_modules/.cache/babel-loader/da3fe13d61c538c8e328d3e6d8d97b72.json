{"ast":null,"code":"var _jsxFileName = \"/Users/murray/Developer/coursework/software_engineering_cs373/foodforthoughts/src/pages/restaurant.js\";\nimport React from 'react';\nimport Select from 'react-select';\nimport backImage from '../photos/rest_image.jpg';\nimport { RestaurantCardGrid } from \"../components/infocard.js\";\nimport { PageNav } from '../components/pageNav.js';\nimport '../App.css';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nclass Restaurant extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.compare = (a, b) => {\n      let key = 'name';\n\n      if (this.state.dropdownLabel != 'Attributes') {\n        key = this.state.dropdownLabel.charAt(0).toLowerCase() + this.state.dropdownLabel.slice(1);\n      }\n\n      if (a[key] < b[key]) {\n        return -1;\n      }\n\n      if (a[key] > b[key]) {\n        return 1;\n      }\n\n      return 0;\n    };\n\n    this.sort = () => {\n      this.setState({\n        elements: this.state.elements.sort(this.compare)\n      });\n    };\n\n    this.incrementPage = () => {\n      const page = this.state.page + 1;\n      this.setState({\n        page\n      });\n    };\n\n    this.decrementPage = () => {\n      const page = this.state.page - 1;\n      this.setState({\n        page\n      });\n    };\n\n    this.goFirstPage = () => {\n      const page = 0;\n      this.setState({\n        page\n      });\n    };\n\n    this.goLastPage = () => {\n      const page = Math.ceil(this.state.elements.length / 9) - 1;\n      this.setState({\n        page\n      });\n    };\n\n    this.styles = {\n      image: {\n        width: 200,\n        height: 150\n      },\n      background: {\n        backgroundImage: \"url(\".concat(backImage),\n        height: '210vh',\n        // 220 vh\n        width: '100vw',\n        overflow: 'auto',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n        backgroundSize: 'cover',\n        backgroundAttachment: 'fixed'\n      },\n      header: {\n        textAlign: 'center',\n        color: 'aliceblue',\n        fontSize: 150\n      }\n    };\n\n    this.toggle = () => {\n      this.setState(prevState => ({\n        dropdownOpen: !prevState.dropdownOpen\n      }));\n    };\n\n    this.toggleMid = () => {\n      this.setState(prevState => ({\n        midDropdownOpen: !prevState.midDropdownOpen\n      }));\n    };\n\n    this.changeFilterTag = label => {\n      this.setState({\n        dropdownLabel: label.currentTarget.getAttribute(\"id\"),\n        filterKey: label.currentTarget.getAttribute(\"fkey\")\n      });\n    };\n\n    this.handleChange = ({\n      target\n    }) => {\n      this.setState({\n        [target.name]: target.value\n      });\n    };\n\n    this.handleReset = () => {\n      this.setState({\n        elements: this.state.resetElements,\n        cuisineFilter: [],\n        locationFilter: [],\n        selectedOptionsCause: [],\n        selectedOptionsSymptom: [],\n        min: null,\n        max: null\n      });\n    };\n\n    this.applyFilter = () => {\n      if (this.state.dropdownLabel != 'Causes' && this.state.dropdownLabel != 'Symptoms') {\n        var elements = this.state.elements.filter(dict => {\n          return dict[this.state.filterKey] >= this.state.min && dict[this.state.filterKey] <= this.state.max;\n        });\n        this.setState({\n          elements\n        });\n      } else {\n        var elements = this.state.elements.filter(dict => {\n          var pass = true;\n          let i;\n\n          for (i = 0; i < this.state.causeFilter.length; i++) if (!dict['cause'].includes(this.state.causeFilter[i])) pass = false;\n\n          for (i = 0; i < this.state.symptomFilter.length; i++) if (!dict['symptom'].includes(this.state.symptomFilter[i])) pass = false;\n\n          return pass;\n        });\n        this.setState({\n          elements\n        });\n      }\n    };\n\n    this.handleSelectCause = selectedOptionsCause => {\n      this.setState({\n        selectedOptionsCause\n      });\n      if (this.state.dropdownLabel === 'Causes' && selectedOptionsCause != null) this.setState({\n        causeFilter: selectedOptionsCause.map(o => o.value)\n      });\n    };\n\n    this.handleSelectSymptom = selectedOptionsSymptom => {\n      this.setState({\n        selectedOptionsSymptom\n      });\n      if (this.state.dropdownLabel === 'Symptoms' && selectedOptionsSymptom != null) this.setState({\n        symptomFilter: selectedOptionsSymptom.map(o => o.value)\n      });\n    };\n\n    this.state = {\n      elements: [],\n      resetElements: [],\n      page: 0,\n      link: '/DiseasePage',\n      dropdownOpen: false,\n      midDropdownOpen: false,\n      dropdownLabel: 'Attributes',\n      cuisineFilter: [],\n      locationFilter: [],\n      filterKey: 'init',\n      min: null,\n      max: null,\n      selectedOptionsSymptom: [],\n      selectedOptionsCause: []\n    };\n  }\n\n  componentDidMount() {\n    let url = 'https://cors-anywhere.herokuapp.com/http://api.foodforthoughtt.me/restaurant';\n    fetch(url).then(response => response.json()).then(data => {\n      console.log(data);\n      this.setState({\n        elements: data,\n        resetElements: data\n      });\n    });\n  }\n\n  render() {\n    var filterComp;\n    var dropdownSet = new Set();\n    var dropdownList = [];\n\n    if (this.state.dropdownLabel === 'Causes') {\n      let i;\n\n      for (i = 0; i < this.state.elements.length; i++) {\n        var dict = this.state.elements[i];\n        var attributes = dict[this.state.filterKey].split(',');\n        let j;\n\n        for (j = 0; j < attributes.length; j++) dropdownSet.add(attributes[j]);\n      }\n\n      dropdownList = Array.from(dropdownSet);\n      var dictList = [];\n\n      for (i = 0; i < dropdownList.length; i++) {\n        dictList.push({\n          value: dropdownList[i],\n          label: dropdownList[i].charAt(0).toUpperCase() + dropdownList[i].slice(1)\n        });\n      }\n\n      filterComp = React.createElement(\"div\", {\n        style: {\n          width: '700px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(Select, {\n        className: \"ml-2\",\n        isMulti: true,\n        closeMenuOnSelect: false,\n        value: this.state.selectedOptionsCause,\n        onChange: this.handleSelectCause,\n        options: dictList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }));\n    } else if (this.state.dropdownLabel === 'Symptoms') {\n      let i;\n\n      for (i = 0; i < this.state.elements.length; i++) {\n        var dict = this.state.elements[i];\n        var attributes = dict[this.state.filterKey].split(',');\n        let j;\n\n        for (j = 0; j < attributes.length; j++) dropdownSet.add(attributes[j]);\n      }\n\n      dropdownList = Array.from(dropdownSet);\n      var dictList = [];\n\n      for (i = 0; i < dropdownList.length; i++) {\n        dictList.push({\n          value: dropdownList[i],\n          label: dropdownList[i].charAt(0).toUpperCase() + dropdownList[i].slice(1)\n        });\n      }\n\n      filterComp = React.createElement(\"div\", {\n        style: {\n          width: '700px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(Select, {\n        className: \"ml-2\",\n        isMulti: true,\n        closeMenuOnSelect: false,\n        value: this.state.selectedOptionsSymptom,\n        onChange: this.handleSelectSymptom,\n        options: dictList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }));\n    } else {\n      filterComp = React.createElement(\"form\", {\n        class: \"form-inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        class: \"sr-only\",\n        for: \"inlineFormInputName2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"input\", {\n        type: \"number\",\n        min: \"0\",\n        name: \"min\",\n        value: this.state.min,\n        onChange: this.handleChange,\n        class: \"form-control mb-2 ml-4 mr-sm-2\",\n        id: \"inlineFormInputName2\",\n        placeholder: \"Min\",\n        style: {\n          width: '60px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        class: \"sr-only\",\n        for: \"inlineFormInputName2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"input\", {\n        type: \"number\",\n        min: \"0\",\n        name: \"max\",\n        value: this.state.max,\n        onChange: this.handleChange,\n        class: \"form-control mb-2 ml-1 mr-sm-2\",\n        id: \"inlineFormInputName2\",\n        placeholder: \"Max\",\n        style: {\n          width: '60px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"img-fluid\",\n      style: this.styles.background,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      class: \"display-1 mb-4\",\n      style: this.styles.header,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \"Restaurant\", React.createElement(\"small\", {\n      style: {\n        color: 'orange'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \" (\", this.state.elements.length, \")\")), React.createElement(RestaurantCardGrid, {\n      link: this.state.link,\n      elements: this.state.elements,\n      currentPage: this.state.page,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }), React.createElement(PageNav, {\n      label: \"Food Page Navigator\",\n      page: this.state.page,\n      decrementPage: this.decrementPage,\n      incrementPage: this.incrementPage,\n      lastPage: this.state.elements.length / 9,\n      goFirstPage: this.goFirstPage,\n      goLastPage: this.goLastPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      class: \"let\",\n      style: {\n        fontSize: 30,\n        color: 'aliceblue',\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \"of \", Math.ceil(this.state.elements.length / 9)));\n  }\n\n}\n\nexport default Restaurant;","map":{"version":3,"sources":["/Users/murray/Developer/coursework/software_engineering_cs373/foodforthoughts/src/pages/restaurant.js"],"names":["React","Select","backImage","RestaurantCardGrid","PageNav","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","Restaurant","Component","constructor","props","compare","a","b","key","state","dropdownLabel","charAt","toLowerCase","slice","sort","setState","elements","incrementPage","page","decrementPage","goFirstPage","goLastPage","Math","ceil","length","styles","image","width","height","background","backgroundImage","overflow","backgroundRepeat","backgroundPosition","backgroundSize","backgroundAttachment","header","textAlign","color","fontSize","toggle","prevState","dropdownOpen","toggleMid","midDropdownOpen","changeFilterTag","label","currentTarget","getAttribute","filterKey","handleChange","target","name","value","handleReset","resetElements","cuisineFilter","locationFilter","selectedOptionsCause","selectedOptionsSymptom","min","max","applyFilter","filter","dict","pass","i","causeFilter","includes","symptomFilter","handleSelectCause","map","o","handleSelectSymptom","link","componentDidMount","url","fetch","then","response","json","data","console","log","render","filterComp","dropdownSet","Set","dropdownList","attributes","split","j","add","Array","from","dictList","push","toUpperCase"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Select from 'react-select';\nimport backImage from '../photos/rest_image.jpg';\nimport {RestaurantCardGrid} from \"../components/infocard.js\";\nimport {PageNav} from '../components/pageNav.js';\nimport '../App.css';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\n\n\nclass Restaurant extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      elements: [],\n      resetElements: [],\n      page: 0,\n      link: '/DiseasePage',\n      dropdownOpen: false,\n      midDropdownOpen: false,\n      dropdownLabel: 'Attributes',\n      cuisineFilter: [],\n      locationFilter: [],\n      filterKey: 'init',\n      min: null,\n      max: null,\n      selectedOptionsSymptom: [],\n      selectedOptionsCause: []\n    }\n  }\n  \n  componentDidMount() {\n    let url = 'https://cors-anywhere.herokuapp.com/http://api.foodforthoughtt.me/restaurant';\n    fetch(url)\n    .then(response => response.json())\n    .then(data => {\n      console.log(data);\n      this.setState({elements: data, resetElements: data});\n    })\n  }\n\n  compare = (a, b) => {\n    let key = 'name';\n    if (this.state.dropdownLabel != 'Attributes') {\n      key = this.state.dropdownLabel.charAt(0).toLowerCase() + this.state.dropdownLabel.slice(1);\n    }\n    if ( a[key] < b[key] ){\n      return -1;\n    }\n    if ( a[key] > b[key] ){\n      return 1;\n    }\n    return 0;\n  }\n\n  sort = () => {\n    this.setState({elements: this.state.elements.sort(this.compare)});\n  }\n  \n  incrementPage = () => {\n    const page = this.state.page + 1;\n    this.setState({page});\n  }\n\n  decrementPage = () => {\n    const page = this.state.page - 1;\n    this.setState({page});\n  }\n\n  goFirstPage = () => {\n    const page = 0;\n    this.setState({page});\n  }\n\n  goLastPage = () => {\n    const page = Math.ceil(this.state.elements.length/9) - 1;\n    this.setState({page});\n  }\n\n  styles = {\n    image: {\n      width: 200,\n      height: 150,\n    },\n\n    background:{\n      backgroundImage: `url(${backImage}`,\n      height: '210vh', // 220 vh\n      width: '100vw',\n      overflow: 'auto',\n      backgroundRepeat: 'no-repeat',\n      backgroundPosition: 'center',\n      backgroundSize: 'cover',\n      backgroundAttachment: 'fixed'\n    },\n\n    header: {\n      textAlign: 'center',\n      color: 'aliceblue',\n      fontSize: 150\n    },\n  };\n  toggle = () => {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n\n  toggleMid = () => {\n    this.setState(prevState => ({\n      midDropdownOpen: !prevState.midDropdownOpen\n    }));\n  }\n  \n  changeFilterTag = (label) => {\n    this.setState({dropdownLabel: label.currentTarget.getAttribute(\"id\"), filterKey: label.currentTarget.getAttribute(\"fkey\")})\n  }\n  \n  handleChange = ({target}) => {\n    this.setState({[target.name]: target.value})\n  }\n  \n  handleReset = () => {\n    this.setState({\n      elements: this.state.resetElements, \n      cuisineFilter: [], \n      locationFilter: [], \n      selectedOptionsCause: [], \n      selectedOptionsSymptom: [],\n      min: null,\n      max: null\n    })\n  }\n  \n  applyFilter = () => {\n    if(this.state.dropdownLabel != 'Causes' && this.state.dropdownLabel != 'Symptoms') {\n      var elements = this.state.elements.filter(dict => {\n          return (dict[this.state.filterKey] >= this.state.min && dict[this.state.filterKey] <= this.state.max)   \n        })\n      this.setState({elements})\n    }\n    else {\n      var elements = this.state.elements.filter(dict => {\n          var pass = true;\n          let i;\n          for(i=0; i<this.state.causeFilter.length; i++)\n            if(!dict['cause'].includes(this.state.causeFilter[i]))\n              pass = false;\n          for(i=0; i<this.state.symptomFilter.length; i++)\n            if(!dict['symptom'].includes(this.state.symptomFilter[i]))\n              pass = false;\n          return pass;\n      })\n      this.setState({elements})\n    }\n  }\n\n  handleSelectCause = (selectedOptionsCause) => {\n    this.setState({selectedOptionsCause});\n    if(this.state.dropdownLabel === 'Causes' && selectedOptionsCause != null)\n      this.setState({causeFilter: selectedOptionsCause.map(o => o.value)})\n  }\n\n  handleSelectSymptom = (selectedOptionsSymptom) => {\n    this.setState({selectedOptionsSymptom})\n    if(this.state.dropdownLabel === 'Symptoms' && selectedOptionsSymptom!= null)\n      this.setState({symptomFilter: selectedOptionsSymptom.map(o => o.value)})\n  }\n\n  render() {\n    var filterComp;\n    var dropdownSet = new Set();\n    var dropdownList = [];\n    if(this.state.dropdownLabel === 'Causes') {\n      let i;\n      for (i=0; i<this.state.elements.length; i++) {\n        var dict = this.state.elements[i];\n        var attributes = dict[this.state.filterKey].split(',');\n        let j;\n        for(j=0; j<attributes.length; j++)\n          dropdownSet.add(attributes[j]);\n      }\n      dropdownList = Array.from(dropdownSet);\n      var dictList = [];\n      for(i=0; i<dropdownList.length; i++){\n        dictList.push({value: dropdownList[i], label: dropdownList[i].charAt(0).toUpperCase() + dropdownList[i].slice(1)});\n      }\n      filterComp = <div style={{width: '700px'}}>\n      <Select className=\"ml-2\" isMulti closeMenuOnSelect={false} value={this.state.selectedOptionsCause} onChange={this.handleSelectCause} options={dictList}/>\n      </div>;\n    }\n    else if(this.state.dropdownLabel === 'Symptoms') {\n      let i;\n      for (i=0; i<this.state.elements.length; i++) {\n        var dict = this.state.elements[i];\n        var attributes = dict[this.state.filterKey].split(',');\n        let j;\n        for(j=0; j<attributes.length; j++)\n          dropdownSet.add(attributes[j]);\n      }\n      dropdownList = Array.from(dropdownSet);\n      var dictList = [];\n      for(i=0; i<dropdownList.length; i++){\n        dictList.push({value: dropdownList[i], label: dropdownList[i].charAt(0).toUpperCase() + dropdownList[i].slice(1)});\n      }\n      filterComp = <div style={{width: '700px'}}>\n      <Select className=\"ml-2\" isMulti closeMenuOnSelect={false} value={this.state.selectedOptionsSymptom} onChange={this.handleSelectSymptom} options={dictList}/>\n      </div>;\n    }\n    else {\n      filterComp = <form class=\"form-inline\">\n      <label class=\"sr-only\" for=\"inlineFormInputName2\">Name</label>\n      <input type=\"number\" min=\"0\" name=\"min\" value={this.state.min} onChange={this.handleChange} class=\"form-control mb-2 ml-4 mr-sm-2\" id=\"inlineFormInputName2\" placeholder=\"Min\" style={{width: '60px'}}></input>\n      <label class=\"sr-only\" for=\"inlineFormInputName2\">Name</label>\n      <input type=\"number\" min=\"0\" name=\"max\" value={this.state.max} onChange={this.handleChange} class=\"form-control mb-2 ml-1 mr-sm-2\" id=\"inlineFormInputName2\" placeholder=\"Max\" style={{width: '60px'}}></input>\n      </form>;\n    }\n    return (\n      \n      \n      <div className=\"img-fluid\" style={this.styles.background}>\n        <h1 class=\"display-1 mb-4\" style={this.styles.header}>Restaurant \n        <small style={{color:'orange'}}> ({this.state.elements.length})</small></h1>\n        \n        {/* <div class=\"justify-content-md-center row mb-5\">\n          <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n            <DropdownToggle color=\"warning\" caret>\n              {this.state.dropdownLabel}\n            </DropdownToggle>\n            <DropdownMenu>\n              <DropdownItem onClick={this.changeFilterTag} id='Average age affected' fkey='age'>Average age affected</DropdownItem>\n              <DropdownItem onClick={this.changeFilterTag} id='Causes' fkey='cause'>Causes</DropdownItem>\n              <DropdownItem onClick={this.changeFilterTag} id='Deaths per year' fkey='deaths'>Deaths per year</DropdownItem>\n              <DropdownItem onClick={this.changeFilterTag} id='Symptoms' fkey='symptom'>Symptoms</DropdownItem>\n              <DropdownItem onClick={this.changeFilterTag} id='Diagnosed per year' fkey='frequency'>Diagnosed per year</DropdownItem>\n            </DropdownMenu>\n          </Dropdown>\n          {filterComp}\n          <button class=\"btn btn-warning ml-4\" onClick={this.applyFilter} style={{height: '37px'}}>Filter</button>\n          <button class=\"btn btn-warning ml-4\" onClick={this.sort} style={{height: '37px'}}>Sort</button>\n          <button class=\"btn btn-primary ml-3\" onClick={this.handleReset} style={{height: '37px'}}>Reset</button>\n        </div> */}\n\n        <RestaurantCardGrid link={this.state.link} elements={this.state.elements} currentPage={this.state.page}/>\n        <PageNav label='Food Page Navigator' page={this.state.page} decrementPage = {this.decrementPage}\n         incrementPage = {this.incrementPage} lastPage={this.state.elements.length/9} goFirstPage = {this.goFirstPage} goLastPage = {this.goLastPage}/>\n        <p class=\"let\" style={{fontSize: 30, color: 'aliceblue', textAlign: 'center'}}>of {Math.ceil(this.state.elements.length/9)}</p>\n      </div> \n    )\n  }\n}\n\nexport default Restaurant"]},"metadata":{},"sourceType":"module"}