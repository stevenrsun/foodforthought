{"ast":null,"code":"var _jsxFileName = \"/u/kelvinyu/CS373/foodforthought/foodforthoughts/src/components/BarChart.js\";\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport d3Tip from \"d3-tip\"; //This code is modified from Simple d3.js bar chart D3: http://bl.ocks.org/d3noob/8952219#bar-data.csv\n//with rainbow function from this codepen: https://codepen.io/chadoh/pen/NRXpKw\n\nclass BarChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      bottomText: \"Loading...\",\n      data: []\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      // call API\n      let url = 'https://cors-anywhere.herokuapp.com/http://api.foodforthoughtt.me/food';\n      const response = await fetch(url);\n\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n\n      const json = await response.json();\n      this.setState({\n        data: json\n      });\n    } catch (error) {\n      console.log(error);\n    }\n\n    var arr = [];\n\n    for (let i = 0; i < this.state.data.length; i++) {\n      const it = parseInt(this.state.data[i]['calories']);\n      arr.push(it);\n    }\n\n    this.drawBarChart(arr);\n  }\n\n  drawBarChart(data) {\n    var margin = {\n      top: 10,\n      right: 10,\n      bottom: 90,\n      left: 10\n    };\n    const canvasHeight = 800 - margin.top - margin.bottom;\n    const canvasWidth = 1200 - margin.left - margin.right;\n    const scale = 1;\n    var xlabel = ['a', 'b', 'c', 'd', 'e', 'f', 'aa', 'bb', 'ca', 'da', 'ea', 'fa', 'ad', 'bd', 'cd', 'dd', 'ed', 'fd', 'af', 'bf', 'cf', 'df', 'ef', 'ff', 'a5', 'b5', 'c5', 'd5', 'e5', '5f', 'a6', 'b2', 'c6', 'd2', 'e6', 'f2'];\n    var xAxis = d3.svg.axis().scale(xScale).orient(\"bottom\").tickValues(xlabel);\n    var xScale = d3.scale.linear().domain(['a', 'b', 'c', 'd', 'e', 'f', 'aa', 'bb', 'ca', 'da', 'ea', 'fa', 'ad', 'bd', 'cd', 'dd', 'ed', 'fd', 'af', 'bf', 'cf', 'df', 'ef', 'ff', 'a5', 'b5', 'c5', 'd5', 'e5', '5f', 'a6', 'b2', 'c6', 'd2', 'e6', 'f2']).rangeRoundBands([0, canvasWidth], .1);\n    const svgCanvas = d3.select(this.refs.canvas).append(\"svg\").attr(\"width\", canvasWidth + margin.left + margin.right).attr(\"height\", canvasHeight + margin.top + margin.bottom);\n    svgCanvas.selectAll(\"rect\").data(data).enter().append(\"rect\").attr(\"width\", 30).attr(\"height\", datapoint => datapoint * scale).attr(\"fill\", \"orange\").attr(\"x\", (datapoint, iteration) => iteration * 31).attr(\"y\", datapoint => canvasHeight - datapoint * scale);\n    svgCanvas.selectAll(\"text\").data(data).enter().append(\"text\").attr(\"x\", (dataPoint, i) => i * 31 + 2).attr(\"y\", (dataPoint, i) => canvasHeight - dataPoint * scale - 10).text(dataPoint => dataPoint);\n    svgCanvas.append(\"g\").attr(\"class\", \"x axis\") //.attr(\"transform\", \"translate(0,\" + (canvasHeight) + \")\")\n    .call(xAxis);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      ref: \"canvas\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default BarChart;","map":{"version":3,"sources":["/u/kelvinyu/CS373/foodforthought/foodforthoughts/src/components/BarChart.js"],"names":["React","Component","d3","d3Tip","BarChart","constructor","props","state","isLoaded","bottomText","data","componentDidMount","url","response","fetch","ok","Error","statusText","json","setState","error","console","log","arr","i","length","it","parseInt","push","drawBarChart","margin","top","right","bottom","left","canvasHeight","canvasWidth","scale","xlabel","xAxis","svg","axis","xScale","orient","tickValues","linear","domain","rangeRoundBands","svgCanvas","select","refs","canvas","append","attr","selectAll","enter","datapoint","iteration","dataPoint","text","call","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport d3Tip  from \"d3-tip\";\n\n\n\n//This code is modified from Simple d3.js bar chart D3: http://bl.ocks.org/d3noob/8952219#bar-data.csv\n//with rainbow function from this codepen: https://codepen.io/chadoh/pen/NRXpKw\n\nclass BarChart extends Component\n{\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      bottomText: \"Loading...\",\n      data: []\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      // call API\n      let url = 'https://cors-anywhere.herokuapp.com/http://api.foodforthoughtt.me/food';\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n      const json = await response.json();\n      this.setState({ data: json });\n    } catch (error) {\n      console.log(error);\n    }\n\n    var arr = []\n    for (let i=0; i < this.state.data.length; i++) {\n      const it = parseInt(this.state.data[i]['calories']);\n      arr.push(it)\n    }\n\n    this.drawBarChart(arr);\n  }\n\n  drawBarChart(data)  {\n    var margin = {top:10, right:10, bottom:90, left:10};\n    const canvasHeight = 800 - margin.top - margin.bottom\n    const canvasWidth = 1200 - margin.left - margin.right\n    const scale = 1\n    var xlabel = ['a', 'b', 'c', 'd', 'e', 'f',\n    'aa', 'bb', 'ca', 'da', 'ea', 'fa',\n    'ad', 'bd', 'cd', 'dd', 'ed', 'fd',\n    'af', 'bf', 'cf', 'df', 'ef', 'ff',\n    'a5', 'b5', 'c5', 'd5', 'e5', '5f',\n    'a6', 'b2', 'c6', 'd2', 'e6', 'f2'];\n    var xAxis = d3.svg.axis()\n                  .scale(xScale)\n                  .orient(\"bottom\")\n                  .tickValues(xlabel);\n    var xScale = d3.scale.linear()\n                  .domain(['a', 'b', 'c', 'd', 'e', 'f',\n                  'aa', 'bb', 'ca', 'da', 'ea', 'fa',\n                  'ad', 'bd', 'cd', 'dd', 'ed', 'fd',\n                  'af', 'bf', 'cf', 'df', 'ef', 'ff',\n                  'a5', 'b5', 'c5', 'd5', 'e5', '5f',\n                  'a6', 'b2', 'c6', 'd2', 'e6', 'f2'])\n                  .rangeRoundBands([0, canvasWidth], .1);\n    const svgCanvas = d3.select(this.refs.canvas)\n        .append(\"svg\")\n        .attr(\"width\", canvasWidth + margin.left + margin.right)\n        .attr(\"height\", canvasHeight + margin.top + margin.bottom)\n    svgCanvas.selectAll(\"rect\")\n        .data(data).enter()\n            .append(\"rect\")\n            .attr(\"width\", 30)\n            .attr(\"height\", (datapoint) => datapoint * scale)\n            .attr(\"fill\", \"orange\")\n            .attr(\"x\", (datapoint, iteration) => iteration * 31)\n            .attr(\"y\", (datapoint) => canvasHeight - datapoint * scale)\n    \n    svgCanvas.selectAll(\"text\")\n      .data(data).enter()\n          .append(\"text\")\n          .attr(\"x\", (dataPoint, i) => i * 31 + 2)\n          .attr(\"y\", (dataPoint, i) => canvasHeight - dataPoint * scale - 10)\n          .text(dataPoint => dataPoint)\n    svgCanvas.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      //.attr(\"transform\", \"translate(0,\" + (canvasHeight) + \")\")\n      .call(xAxis);\n  }\n\n  render() { \n    return <div ref=\"canvas\"></div> \n  }\n}\n\nexport default BarChart;\n"]},"metadata":{},"sourceType":"module"}