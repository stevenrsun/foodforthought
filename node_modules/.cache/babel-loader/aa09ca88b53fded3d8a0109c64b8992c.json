{"ast":null,"code":"var _jsxFileName = \"/Users/murray/Developer/coursework/software_engineering_cs373/foodforthoughts/src/components/BarChart.js\";\n// import React, { Component } from 'react';\n// import * as d3 from \"d3\";\n// import d3Tip  from \"d3-tip\";\n// //This code is modified from Simple d3.js bar chart D3: http://bl.ocks.org/d3noob/8952219#bar-data.csv\n// //with rainbow function from this codepen: https://codepen.io/chadoh/pen/NRXpKw\n// class BarChart extends Component\n// {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       isLoaded: false,\n//       bottomText: \"Loading...\",\n//       data: []\n//     };\n//   }\n//   async componentDidMount() {\n//     try {\n//       // call API\n//       let url = 'https://cors-anywhere.herokuapp.com/http://api.foodforthoughtt.me/food';\n//       const response = await fetch(url);\n//       // wait for response\n//       if (!response.ok) {\n//         throw Error(response.statusText);\n//       }\n//       const json = await response.json();\n//       this.setState({ data: json });\n//     } catch (error) {\n//       console.log(error);\n//     }\n//     var labels = []\n//     var values = []\n//     for (let i=0; i < this.state.data.length; i++) {\n//       labels.push(this.state.data[i]['name'])\n//       values.push(this.state.data[i]['calories'])\n//     }\n//     this.drawBarChart(labels, values);\n//   }\n//   drawBarChart(labels, data)  {\n//     const canvasHeight = 400\n//     const canvasWidth = 600\n//     const scale = 5\n//     const svgCanvas = d3.select(this.refs.canvas)\n//         .append(\"svg\")\n//         .attr(\"width\", canvasWidth)\n//         .attr(\"height\", canvasHeight)\n//         .style(\"border\", \"1px solid black\")\n//     svgCanvas.selectAll(\"rect\")\n//         .data(data).enter()\n//             .append(\"rect\")\n//             .attr(\"width\", 40)\n//             .attr(\"height\", (datapoint) => datapoint * scale)\n//             .attr(\"fill\", \"orange\")\n//             .attr(\"x\", (datapoint, iteration) => iteration * 45)\n//             .attr(\"y\", (datapoint) => canvasHeight - datapoint * scale)\n//     svgCanvas.selectAll(\"text\")\n//       .data(data).enter()\n//           .append(\"text\")\n//           .attr(\"x\", (dataPoint, i) => i * 45 + 10)\n//           .attr(\"y\", (dataPoint, i) => canvasHeight - dataPoint * scale - 10)\n//           .text(dataPoint => dataPoint)\n//   }\n//   render() { \n//     return <div ref=\"canvas\"></div> \n//   }\n// }\n// export default BarChart;\nimport React from 'react';\nimport rd3 from 'react-d3-library';\nimport * as d3 from 'd3';\nconst RD3Component = rd3.Component;\n\nasync function loadChart() {\n  var node = document.createElement('div');\n  const apiData = await d3.json(\"https://cors-anywhere.herokuapp.com/http://api.foodforthoughtt.me/food\");\n  var data = [];\n  apiData[\"organizations\"].forEach(element => {\n    data.push({\n      name: element[\"name\"],\n      value: element[\"missions\"].length\n    });\n  });\n  var margin = {\n    top: 30,\n    right: 0,\n    bottom: 10,\n    left: 300\n  };\n  var width = 800;\n  var height = data.length * 25 + margin.top + margin.bottom;\n  var svg = d3.select(node).append(\"svg\").attr(\"width\", width).attr(\"height\", height);\n  const x = d3.scaleLinear().domain([0, d3.max(data, d => d.value)]).range([margin.left, width - margin.right]);\n  const y = d3.scaleBand().domain(data.map(d => d.name)).range([margin.top, height - margin.bottom]).padding(0.1);\n\n  const xAxis = g => g.attr(\"transform\", \"translate(0,\".concat(margin.top, \")\")).call(d3.axisTop(x).ticks(width / 80)).call(g => g.select(\".domain\").remove());\n\n  const yAxis = g => g.attr(\"transform\", \"translate(\".concat(margin.left, \",0)\")).call(d3.axisLeft(y).tickSizeOuter(0));\n\n  const format = x.tickFormat(20);\n  svg.append(\"g\").attr(\"fill\", \"steelblue\").selectAll(\"rect\").data(data).join(\"rect\").attr(\"x\", x(0)).attr(\"y\", d => y(d.name)).attr(\"width\", d => x(d.value) - x(0)).attr(\"height\", y.bandwidth());\n  svg.append(\"g\").attr(\"fill\", \"white\").attr(\"text-anchor\", \"end\").style(\"font\", \"12px sans-serif\").selectAll(\"text\").data(data).join(\"text\").attr(\"x\", d => x(d.value) - 4).attr(\"y\", d => y(d.name) + y.bandwidth() / 2).attr(\"dy\", \"0.35em\").text(d => format(d.value));\n  svg.append(\"g\").call(xAxis);\n  svg.append(\"g\").call(yAxis);\n  return node;\n}\n\nexport default class HorizontalBarChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      d3: ''\n    };\n  }\n\n  componentDidMount() {\n    loadChart().then(result => {\n      this.setState({\n        d3: result\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(RD3Component, {\n      data: this.state.d3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/murray/Developer/coursework/software_engineering_cs373/foodforthoughts/src/components/BarChart.js"],"names":["React","rd3","d3","RD3Component","Component","loadChart","node","document","createElement","apiData","json","data","forEach","element","push","name","value","length","margin","top","right","bottom","left","width","height","svg","select","append","attr","x","scaleLinear","domain","max","d","range","y","scaleBand","map","padding","xAxis","g","call","axisTop","ticks","remove","yAxis","axisLeft","tickSizeOuter","format","tickFormat","selectAll","join","bandwidth","style","text","HorizontalBarChart","constructor","props","state","componentDidMount","then","result","setState","render"],"mappings":"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","sourcesContent":["// import React, { Component } from 'react';\n// import * as d3 from \"d3\";\n// import d3Tip  from \"d3-tip\";\n\n\n\n// //This code is modified from Simple d3.js bar chart D3: http://bl.ocks.org/d3noob/8952219#bar-data.csv\n// //with rainbow function from this codepen: https://codepen.io/chadoh/pen/NRXpKw\n\n// class BarChart extends Component\n// {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       isLoaded: false,\n//       bottomText: \"Loading...\",\n//       data: []\n//     };\n//   }\n\n//   async componentDidMount() {\n//     try {\n//       // call API\n//       let url = 'https://cors-anywhere.herokuapp.com/http://api.foodforthoughtt.me/food';\n//       const response = await fetch(url);\n//       // wait for response\n//       if (!response.ok) {\n//         throw Error(response.statusText);\n//       }\n//       const json = await response.json();\n//       this.setState({ data: json });\n//     } catch (error) {\n//       console.log(error);\n//     }\n\n//     var labels = []\n//     var values = []\n//     for (let i=0; i < this.state.data.length; i++) {\n//       labels.push(this.state.data[i]['name'])\n//       values.push(this.state.data[i]['calories'])\n//     }\n//     this.drawBarChart(labels, values);\n//   }\n\n//   drawBarChart(labels, data)  {\n//     const canvasHeight = 400\n//     const canvasWidth = 600\n//     const scale = 5\n//     const svgCanvas = d3.select(this.refs.canvas)\n//         .append(\"svg\")\n//         .attr(\"width\", canvasWidth)\n//         .attr(\"height\", canvasHeight)\n//         .style(\"border\", \"1px solid black\")\n//     svgCanvas.selectAll(\"rect\")\n//         .data(data).enter()\n//             .append(\"rect\")\n//             .attr(\"width\", 40)\n//             .attr(\"height\", (datapoint) => datapoint * scale)\n//             .attr(\"fill\", \"orange\")\n//             .attr(\"x\", (datapoint, iteration) => iteration * 45)\n//             .attr(\"y\", (datapoint) => canvasHeight - datapoint * scale)\n    \n//     svgCanvas.selectAll(\"text\")\n//       .data(data).enter()\n//           .append(\"text\")\n//           .attr(\"x\", (dataPoint, i) => i * 45 + 10)\n//           .attr(\"y\", (dataPoint, i) => canvasHeight - dataPoint * scale - 10)\n//           .text(dataPoint => dataPoint)\n//   }\n\n//   render() { \n//     return <div ref=\"canvas\"></div> \n//   }\n// }\n\n// export default BarChart;\n\nimport React from 'react'\nimport rd3 from 'react-d3-library'\nimport * as d3 from 'd3'\n\nconst RD3Component = rd3.Component;\n\nasync function loadChart() {\n    var node = document.createElement('div');\n\n    const apiData = await d3.json(\"https://cors-anywhere.herokuapp.com/http://api.foodforthoughtt.me/food\")\n\n    var data = []\n    apiData[\"organizations\"].forEach((element) => {\n    data.push({name: element[\"name\"], value: element[\"missions\"].length})\n    })\n\n    var margin = ({top: 30, right: 0, bottom: 10, left: 300})\n\n    var width = 800;\n    var height = data.length * 25 + margin.top + margin.bottom\n\n    var svg = d3.select(node).append(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n    \n    \n\n    const x = d3.scaleLinear()\n        .domain([0, d3.max(data, d => d.value)])\n        .range([margin.left, width - margin.right])\n    \n    const y = d3.scaleBand()\n        .domain(data.map(d => d.name))\n        .range([margin.top, height - margin.bottom])\n        .padding(0.1)\n    \n    const xAxis = g => g\n        .attr(\"transform\", `translate(0,${margin.top})`)\n        .call(d3.axisTop(x).ticks(width / 80))\n        .call(g => g.select(\".domain\").remove())\n\n    const yAxis = g => g\n        .attr(\"transform\", `translate(${margin.left},0)`)\n        .call(d3.axisLeft(y).tickSizeOuter(0))\n\n    const format =  x.tickFormat(20);\n\n    \n    svg.append(\"g\")\n            .attr(\"fill\", \"steelblue\")\n        .selectAll(\"rect\")\n        .data(data)\n        .join(\"rect\")\n            .attr(\"x\", x(0))\n            .attr(\"y\", d => y(d.name))\n            .attr(\"width\", d => x(d.value) - x(0))\n            .attr(\"height\", y.bandwidth());\n    \n    svg.append(\"g\")\n            .attr(\"fill\", \"white\")\n            .attr(\"text-anchor\", \"end\")\n            .style(\"font\", \"12px sans-serif\")\n        .selectAll(\"text\")\n        .data(data)\n        .join(\"text\")\n            .attr(\"x\", d => x(d.value) - 4)\n            .attr(\"y\", d => y(d.name) + y.bandwidth() / 2)\n            .attr(\"dy\", \"0.35em\")\n            .text(d => format(d.value));\n    \n    svg.append(\"g\")\n        .call(xAxis);\n    \n    svg.append(\"g\")\n        .call(yAxis);\n\n    return node;\n    \n    \n}\n\nexport default class HorizontalBarChart extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {d3: ''}\n    }\n  \n    componentDidMount() {\n      loadChart().then((result) => {\n        this.setState({d3: result});\n      })\n    }\n  \n    render() {\n      return(<div><RD3Component data={this.state.d3}/></div>)\n    }\n  }\n"]},"metadata":{},"sourceType":"module"}