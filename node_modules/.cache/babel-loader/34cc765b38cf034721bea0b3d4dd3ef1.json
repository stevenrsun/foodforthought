{"ast":null,"code":"var _jsxFileName = \"/Users/murray/Developer/coursework/software_engineering_cs373/foodforthoughts/src/components/searchCard.js\";\nimport React, { Component } from 'react';\nimport Highlighter from 'react-highlight-words';\nimport { Text } from 'react-native';\nimport { NavLink } from 'react-router-dom';\nexport class SearchCard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      keyMap: {\n        'name': 'Name: ',\n        'business_name': 'Name: ',\n        'protein': 'Protein: ',\n        'fat': 'Fat: ',\n        'carbs': 'Carbs: ',\n        'sodium': 'Sodium: ',\n        'calories': 'Calories: ',\n        'age': 'Average age affected: ',\n        'cause': 'Causes: ',\n        'deaths': 'Deaths per year: ',\n        'symptom': 'Symptoms: ',\n        'frequency': 'Diagnosed per year: ',\n        'address': 'Address: ',\n        'category': 'Cuisine: ',\n        'price_range': 'Cost: ',\n        'rating': 'Rating: ',\n        'review_count': 'Yelp Reviews: '\n      }\n    };\n  }\n\n  render() {\n    var output = [];\n    var nameKey = '';\n    var params = this.props.params.split(' ');\n\n    for (let key in this.props.elementDict) {\n      if (key in this.state.keyMap) {\n        var text = this.props.elementDict[key];\n        var permaText = text;\n        if (typeof text != 'string') text = text.toString();\n        var paramsToHighlightIndices = [];\n        var paramsToHighlight = [];\n        let i;\n\n        for (i = 0; i < params.length; i++) {\n          if (text.includes(params[i])) {\n            paramsToHighlight.push(params[i]);\n            paramsToHighlightIndices.push(text.indexOf(params[i]));\n          }\n        }\n\n        paramsToHighlightIndices.sort();\n        var splitText = [];\n\n        for (i = 0; i < paramsToHighlightIndices.length; i++) {\n          var newText;\n          if (i = 0 && paramsToHighlight[i] != 0) newText = text.slice(0, paramsToHighlight[i]);else if (i = 0) newText = text.slice(0, paramsToHighlight[i].length);else if (i = paramsToHighlightIndices.length - 1) newText = text.slice(paramsToHighlightIndices[i]);else newText = text.slice(paramsToHighlightIndices[i], paramsToHighlightIndices[i + 1]);\n          splitText.push(newText);\n          if (i != paramsToHighlightIndices.length - 1) text = text.slice(paramsToHighlightIndices[i + 1]);\n        }\n\n        var line = [];\n        line.push(React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, this.state.keyMap[key]));\n        let j;\n        var included = false;\n\n        for (i = 0; i < paramsToHighlight.length; i++) {\n          if (permaText.includes(paramsToHighlight[i])) included = true;\n        }\n\n        if (included) for (j = 0; j < splitText.length; j++) {\n          if (j % 2 != 0) line.push(React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          }, splitText[j]));else line.push(React.createElement(Text, {\n            style: {\n              fontWeight: 'bold'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }, splitText[j]));\n        } else line.push(React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, permaText));\n        line.push(React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        })));\n        output.push(line);\n      }\n    }\n\n    return React.createElement(\"div\", {\n      class: \"col d-flex justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"card bg-light border-light m-2\",\n      style: {\n        width: '500px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, output), React.createElement(NavLink, {\n      to: {\n        pathname: this.props.link,\n        state: {\n          dict: this.props.elementDict\n        }\n      },\n      class: \"card-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"More Info\"))));\n  }\n\n}\nexport class SearchCardGrid extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  render() {\n    var arr1 = [];\n    var test = React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"fuck\"), React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"you!\"));\n    let i = 0;\n\n    while (i < this.props.elements.length) {\n      arr1.push(React.createElement(\"div\", {\n        class: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(SearchCard, {\n        link: this.props.link,\n        params: this.props.params,\n        elementDict: this.props.elements[i],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })));\n      i++;\n    }\n\n    return React.createElement(\"div\", {\n      class: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, arr1);\n  }\n\n}\nexport default SearchCard;","map":{"version":3,"sources":["/Users/murray/Developer/coursework/software_engineering_cs373/foodforthoughts/src/components/searchCard.js"],"names":["React","Component","Highlighter","Text","NavLink","SearchCard","state","keyMap","render","output","nameKey","params","props","split","key","elementDict","text","permaText","toString","paramsToHighlightIndices","paramsToHighlight","i","length","includes","push","indexOf","sort","splitText","newText","slice","line","j","included","fontWeight","width","pathname","link","dict","SearchCardGrid","arr1","test","elements"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Highlighter from 'react-highlight-words';\nimport {Text} from 'react-native';\nimport {NavLink} from 'react-router-dom';\n\n\n\nexport class SearchCard extends Component {\n    state = { \n        keyMap: {'name': 'Name: ', 'business_name': 'Name: ', 'protein': 'Protein: ', 'fat': 'Fat: ', 'carbs': 'Carbs: ', 'sodium': 'Sodium: ',\n                    'calories': 'Calories: ', 'age': 'Average age affected: ', 'cause': 'Causes: ',\n                    'deaths': 'Deaths per year: ', 'symptom': 'Symptoms: ', 'frequency': 'Diagnosed per year: ',\n                    'address': 'Address: ', 'category': 'Cuisine: ', 'price_range': 'Cost: ', 'rating': 'Rating: ', 'review_count': 'Yelp Reviews: '}\n     }\n\n    render() { \n        var output = [];\n        var nameKey = '';\n        var params = this.props.params.split(' ');\n        for(let key in this.props.elementDict) {\n            if(key in this.state.keyMap) {\n                var text = this.props.elementDict[key];\n                var permaText = text;\n                if(typeof(text) != 'string')\n                    text = text.toString();\n                var paramsToHighlightIndices = [];\n                var paramsToHighlight = [];\n                let i;\n                for(i=0; i<params.length; i++) {\n                    if(text.includes(params[i])) {\n                        paramsToHighlight.push(params[i]);\n                        paramsToHighlightIndices.push(text.indexOf(params[i]));\n                    }\n                }\n                paramsToHighlightIndices.sort();\n                var splitText = [];\n                for(i=0; i<paramsToHighlightIndices.length; i++){\n                    var newText;\n                    if(i=0 && paramsToHighlight[i] != 0)\n                        newText = text.slice(0, paramsToHighlight[i]);\n                    else if(i=0)\n                        newText = text.slice(0, paramsToHighlight[i].length);\n                    else if(i=paramsToHighlightIndices.length - 1)\n                        newText = text.slice(paramsToHighlightIndices[i]);\n                    else\n                        newText = text.slice(paramsToHighlightIndices[i], paramsToHighlightIndices[i + 1]);\n                    splitText.push(newText);\n                    if(i != paramsToHighlightIndices.length - 1)\n                        text = text.slice(paramsToHighlightIndices[i+1]);\n                }\n                var line = [];\n                line.push(<Text>{this.state.keyMap[key]}</Text>)\n                let j;\n                var included = false;\n                for(i=0; i<paramsToHighlight.length; i++) {\n                    if(permaText.includes(paramsToHighlight[i]))\n                        included = true;\n                }\n                if(included)\n                    for(j=0; j<splitText.length; j++) {\n                        if(j%2 != 0) \n                            line.push(<Text>{splitText[j]}</Text>)\n                        else\n                            line.push(<Text style={{fontWeight: 'bold'}}>{splitText[j]}</Text>)\n                    }\n                else\n                    line.push(<Text>{permaText}</Text>)\n                line.push(<Text><br/></Text>)\n                output.push(line);\n            }\n        }\n        return ( \n                <div class=\"col d-flex justify-content-center\">\n                    <div class=\"card bg-light border-light m-2\" style={{width:'500px'}}>\n                        <div class=\"card-body\">\n                            <div class=\"card-text\">{output}</div>\n                            <NavLink to={{pathname: (this.props.link), state: {dict: this.props.elementDict}}} class=\"card-link\">More Info</NavLink>\n                        </div>\n                    </div>\n                </div>\n            \n        );\n    }\n}\n\nexport class SearchCardGrid extends Component {\n    state = {\n    }\n    render() {\n        var arr1 = [];\n        var test = <React.Fragment><Text>fuck</Text><Text>you!</Text></React.Fragment>;\n        let i = 0;\n        while(i < this.props.elements.length) {\n            arr1.push(<div class=\"row\"><SearchCard link={this.props.link} params = {this.props.params} elementDict = {this.props.elements[i]}/></div>)\n            i++;\n        }\n        return ( \n            <div class=\"container\">\n                {arr1}\n            </div>\n        );\n    }\n}\n \nexport default SearchCard;"]},"metadata":{},"sourceType":"module"}