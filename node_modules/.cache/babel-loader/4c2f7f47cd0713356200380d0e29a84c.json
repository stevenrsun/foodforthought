{"ast":null,"code":"var _jsxFileName = \"/u/kelvinyu/CS373/foodforthought/foodforthoughts/src/components/BarChart.js\";\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport d3Tip from \"d3-tip\"; //This code is modified from Simple d3.js bar chart D3: http://bl.ocks.org/d3noob/8952219#bar-data.csv\n//with rainbow function from this codepen: https://codepen.io/chadoh/pen/NRXpKw\n\nclass BarChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      bottomText: \"Loading...\"\n    };\n  }\n\n  componentDidMount() {\n    var arr = new Array(); // call API\n\n    let url = 'https://cors-anywhere.herokuapp.com/http://api.foodforthoughtt.me/food';\n    fetch(url).then(response => response.json()).then(data => {\n      for (let i = 0; i < data.length; i++) {\n        const it = parseInt(data[i]['calories']);\n        arr.push(it);\n      }\n    });\n    console.log(arr); //arr = []\n\n    arr = [50, 56, 43, 53, 52, 47, 39, 160, 43, 534, 208, 144, 97, 133, 34, 49, 32, 23, 13, 23, 25, 59, 402, 86, 155, 567, 654, 562, 26, 18, 68, 347, 81, 368, 189, 23];\n    console.log(arr);\n    this.drawBarChart(arr);\n  }\n\n  drawBarChart(data) {\n    const canvasHeight = 800;\n    const canvasWidth = 1118;\n    const scale = 1;\n    const svgCanvas = d3.select(this.refs.canvas).append(\"svg\").attr(\"width\", canvasWidth).attr(\"height\", canvasHeight).style(\"border\", \"1px solid black\");\n    svgCanvas.selectAll(\"rect\").data(data).enter().append(\"rect\").attr(\"width\", 30).attr(\"height\", datapoint => datapoint * scale).attr(\"fill\", \"orange\").attr(\"x\", (datapoint, iteration) => iteration * 31).attr(\"y\", datapoint => canvasHeight - datapoint * scale);\n    svgCanvas.selectAll(\"text\").data(data).enter().append(\"text\").attr(\"x\", (dataPoint, i) => i * 31 + 2).attr(\"y\", (dataPoint, i) => canvasHeight - dataPoint * scale).attr(\"transform\", d => \"rotate(-90\").text('example label lol ');\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      ref: \"canvas\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default BarChart;","map":{"version":3,"sources":["/u/kelvinyu/CS373/foodforthought/foodforthoughts/src/components/BarChart.js"],"names":["React","Component","d3","d3Tip","BarChart","constructor","props","state","isLoaded","bottomText","componentDidMount","arr","Array","url","fetch","then","response","json","data","i","length","it","parseInt","push","console","log","drawBarChart","canvasHeight","canvasWidth","scale","svgCanvas","select","refs","canvas","append","attr","style","selectAll","enter","datapoint","iteration","dataPoint","d","text","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport d3Tip  from \"d3-tip\";\n\n\n\n//This code is modified from Simple d3.js bar chart D3: http://bl.ocks.org/d3noob/8952219#bar-data.csv\n//with rainbow function from this codepen: https://codepen.io/chadoh/pen/NRXpKw\n\nclass BarChart extends Component\n{\n  constructor(props) {\n    super(props);\n    this.state =\n    {\n      isLoaded: false,\n      bottomText: \"Loading...\",\n    };\n  }\n\n  componentDidMount() {\n    var arr = new Array();\n    // call API\n    let url = 'https://cors-anywhere.herokuapp.com/http://api.foodforthoughtt.me/food';\n    fetch(url)\n    .then(response => response.json())\n    .then(data => {\n      for (let i=0; i < data.length; i++) {\n        const it = parseInt(data[i]['calories']);\n        arr.push(it)\n      }\n    })\n    console.log(arr)\n    //arr = []\n    arr = [ 50, 56, 43, 53, 52, 47, 39, 160, 43, 534, 208, 144, 97, 133,\n    34, 49, 32, 23, 13, 23, 25, 59, 402, 86, 155, 567, 654, 562, 26, 18, 68, 347, \n  81, 368, 189, 23 ]\n    console.log(arr);\n    this.drawBarChart(arr);\n  }\n\n  drawBarChart(data)  {\n    const canvasHeight = 800\n    const canvasWidth = 1118\n    const scale = 1\n    const svgCanvas = d3.select(this.refs.canvas)\n        .append(\"svg\")\n        .attr(\"width\", canvasWidth)\n        .attr(\"height\", canvasHeight)\n        .style(\"border\", \"1px solid black\")\n    svgCanvas.selectAll(\"rect\")\n        .data(data).enter()\n            .append(\"rect\")\n            .attr(\"width\", 30)\n            .attr(\"height\", (datapoint) => datapoint * scale)\n            .attr(\"fill\", \"orange\")\n            .attr(\"x\", (datapoint, iteration) => iteration * 31)\n            .attr(\"y\", (datapoint) => canvasHeight - datapoint * scale)\n    \n    svgCanvas.selectAll(\"text\")\n      .data(data).enter()\n          .append(\"text\")\n          .attr(\"x\", (dataPoint, i) => i * 31 + 2)\n          .attr(\"y\", (dataPoint, i) => canvasHeight - dataPoint*scale)\n          .attr(\"transform\", d => \"rotate(-90\")\n          .text('example label lol ')\n\n  }\n\n  render() { \n    return <div ref=\"canvas\"></div> \n  }\n}\n\nexport default BarChart;\n"]},"metadata":{},"sourceType":"module"}