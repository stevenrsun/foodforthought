{"ast":null,"code":"var _jsxFileName = \"/Users/murray/Developer/coursework/software_engineering_cs373/foodforthoughts/src/components/searchCard.js\";\nimport React, { Component } from 'react';\nimport Highlighter from 'react-highlight-words';\nexport class SearchCard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      keyMap: {\n        'protein': 'Protein: ',\n        'fat': 'Fat: ',\n        'carbs': 'Carbs: ',\n        'sodium': 'Sodium: ',\n        'calories': 'Calories: ',\n        'age': 'Average age affected: ',\n        'cause': 'Causes: ',\n        'deaths': 'Deaths per year: ',\n        'symptom': 'Symptoms: ',\n        'frequency': 'Diagnosed per year: ',\n        'address': 'Address: ',\n        'category': 'Cuisine: ',\n        'price_range': 'Cost: ',\n        'rating': 'Rating: ',\n        'review_count': 'Yelp Reviews: '\n      }\n    };\n  }\n\n  render() {\n    // get keys from element dictionary\n    var nameKey = '';\n    var output = [];\n    var params = this.props.params.split(' ');\n    let i;\n\n    for (let key in this.props.elementDict) {\n      if (key in this.state.keyMap) {\n        var currentString;\n        var text = this.props.elementDict[key];\n        if (typeof text != 'string') text = text.toString();\n        var ind = text.indexOf();\n\n        if (ind >= 0) {\n          var textFront = text.slice(0, ind);\n          var textEnd = text.slice(ind + this.props.params.length);\n        }\n\n        if (currentString.length === 0) output.push(React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, this.state.keyMap[key], this.props.elementDict[key]));\n      }\n\n      if (key.includes('name')) nameKey = key;\n    }\n\n    output.push('...');\n    return React.createElement(\"div\", {\n      class: \"col d-flex justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"card bg-light border-light m-2\",\n      style: {\n        width: '500px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"card-header font-weight-bold\",\n      style: {\n        fontSize: 25\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, this.props.elementDict[nameKey]), React.createElement(\"div\", {\n      class: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, output))));\n  }\n\n}\nexport class SearchCardGrid extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  render() {\n    var arr1 = [];\n    let i = 0;\n\n    while (i < this.props.elements.length) {\n      arr1.push(React.createElement(\"div\", {\n        class: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(SearchCard, {\n        params: this.props.params,\n        elementDict: this.props.elements[i],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })));\n      i++;\n    }\n\n    return React.createElement(\"div\", {\n      class: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, arr1);\n  }\n\n}\nexport default SearchCard;","map":{"version":3,"sources":["/Users/murray/Developer/coursework/software_engineering_cs373/foodforthoughts/src/components/searchCard.js"],"names":["React","Component","Highlighter","SearchCard","state","keyMap","render","nameKey","output","params","props","split","i","key","elementDict","currentString","text","toString","ind","indexOf","textFront","slice","textEnd","length","push","includes","width","fontSize","SearchCardGrid","arr1","elements"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Highlighter from 'react-highlight-words';\n\nexport class SearchCard extends Component {\n    state = { \n        keyMap: {'protein': 'Protein: ', 'fat': 'Fat: ', 'carbs': 'Carbs: ', 'sodium': 'Sodium: ',\n                    'calories': 'Calories: ', 'age': 'Average age affected: ', 'cause': 'Causes: ',\n                    'deaths': 'Deaths per year: ', 'symptom': 'Symptoms: ', 'frequency': 'Diagnosed per year: ',\n                    'address': 'Address: ', 'category': 'Cuisine: ', 'price_range': 'Cost: ', 'rating': 'Rating: ', 'review_count': 'Yelp Reviews: '}\n     }\n    render() { \n        // get keys from element dictionary\n        var nameKey = '';\n        var output = [];\n        var params = this.props.params.split(' ');\n        let i;\n        for (let key in this.props.elementDict) {\n            if(key in this.state.keyMap) {\n                var currentString;\n                var text = this.props.elementDict[key];\n                if(typeof(text) != 'string')\n                    text = text.toString();\n                var ind = text.indexOf();\n                if(ind >= 0) {\n                    var textFront = text.slice(0, ind);\n                    var textEnd = text.slice(ind+this.props.params.length);                    \n                }\n                if(currentString.length === 0)\n                output.push(<p>{this.state.keyMap[key]}{this.props.elementDict[key]}</p>);\n            }\n            if(key.includes('name'))\n                nameKey = key;\n        }\n        output.push('...');\n\n        return ( \n            <div class=\"col d-flex justify-content-center\">\n                <div class=\"card bg-light border-light m-2\" style={{width: '500px'}}>\n                    <div class=\"card-header font-weight-bold\" style={{fontSize: 25}}>{this.props.elementDict[nameKey]}</div>\n                    <div class=\"card-body\">\n                        <div class=\"card-text\">{output}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport class SearchCardGrid extends Component {\n    state = {\n    }\n    render() {\n        var arr1 = [];\n        let i = 0;\n        while(i < this.props.elements.length) {\n            arr1.push(<div class=\"row\"><SearchCard params = {this.props.params} elementDict = {this.props.elements[i]}/></div>)\n            i++;\n        }\n        return ( \n            <div class=\"container\">\n                {arr1}\n            </div>\n        );\n    }\n}\n \nexport default SearchCard;"]},"metadata":{},"sourceType":"module"}