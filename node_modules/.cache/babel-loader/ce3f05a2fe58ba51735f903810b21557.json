{"ast":null,"code":"var _jsxFileName = \"/Users/murray/Developer/coursework/software_engineering_cs373/foodforthoughts/src/components/BarChart.js\";\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\n\nclass BarChart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    let url = 'https://cors-anywhere.herokuapp.com/http://api.foodforthoughtt.me/food';\n    var result = [];\n    fetch(url).then(response => response.json()).then(data => {\n      var dict;\n\n      for (dict in data) {\n        console.log(dict);\n        result.push(dict['calories']);\n      }\n\n      this.setState({\n        result: data\n      });\n    });\n    this.drawBarChart(result);\n  }\n\n  drawBarChart(data) {\n    const canvasHeight = 400;\n    const canvasWidth = 600;\n    const scale = 20;\n    const svgCanvas = d3.select(this.refs.canvas).append(\"svg\").attr(\"width\", canvasWidth).attr(\"height\", canvasHeight).style(\"border\", \"1px solid black\");\n    svgCanvas.selectAll(\"rect\").data(data).enter().append(\"rect\").attr(\"width\", 40).attr(\"height\", datapoint => datapoint * scale).attr(\"fill\", \"orange\").attr(\"x\", (datapoint, iteration) => iteration * 45).attr(\"y\", datapoint => canvasHeight - datapoint * scale);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      ref: \"canvas\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default BarChart;","map":{"version":3,"sources":["/Users/murray/Developer/coursework/software_engineering_cs373/foodforthoughts/src/components/BarChart.js"],"names":["React","Component","d3","BarChart","state","data","componentDidMount","url","result","fetch","then","response","json","dict","console","log","push","setState","drawBarChart","canvasHeight","canvasWidth","scale","svgCanvas","select","refs","canvas","append","attr","style","selectAll","enter","datapoint","iteration","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;AAKA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC7BG,KAD6B,GACrB;AACJC,MAAAA,IAAI,EAAE;AADF,KADqB;AAAA;;AAK7BC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,GAAG,GAAG,wEAAV;AAEA,QAAIC,MAAM,GAAG,EAAb;AACAC,IAAAA,KAAK,CAACF,GAAD,CAAL,CACCG,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEML,IAAI,IAAI;AACV,UAAIQ,IAAJ;;AACA,WAAKA,IAAL,IAAaR,IAAb,EAAmB;AACfS,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAL,QAAAA,MAAM,CAACQ,IAAP,CAAYH,IAAI,CAAC,UAAD,CAAhB;AACH;;AACD,WAAKI,QAAL,CAAc;AAACT,QAAAA,MAAM,EAAEH;AAAT,OAAd;AACH,KATD;AAYA,SAAKa,YAAL,CAAkBV,MAAlB;AACH;;AAGDU,EAAAA,YAAY,CAACb,IAAD,EAAQ;AAChB,UAAMc,YAAY,GAAG,GAArB;AACA,UAAMC,WAAW,GAAG,GAApB;AACA,UAAMC,KAAK,GAAG,EAAd;AACA,UAAMC,SAAS,GAAGpB,EAAE,CAACqB,MAAH,CAAU,KAAKC,IAAL,CAAUC,MAApB,EACbC,MADa,CACN,KADM,EAEbC,IAFa,CAER,OAFQ,EAECP,WAFD,EAGbO,IAHa,CAGR,QAHQ,EAGER,YAHF,EAIbS,KAJa,CAIP,QAJO,EAIG,iBAJH,CAAlB;AAKAN,IAAAA,SAAS,CAACO,SAAV,CAAoB,MAApB,EACKxB,IADL,CACUA,IADV,EACgByB,KADhB,GAESJ,MAFT,CAEgB,MAFhB,EAGSC,IAHT,CAGc,OAHd,EAGuB,EAHvB,EAISA,IAJT,CAIc,QAJd,EAIyBI,SAAD,IAAeA,SAAS,GAAGV,KAJnD,EAKSM,IALT,CAKc,MALd,EAKsB,QALtB,EAMSA,IANT,CAMc,GANd,EAMmB,CAACI,SAAD,EAAYC,SAAZ,KAA0BA,SAAS,GAAG,EANzD,EAOSL,IAPT,CAOc,GAPd,EAOoBI,SAAD,IAAeZ,YAAY,GAAGY,SAAS,GAAGV,KAP7D;AASH;;AACDY,EAAAA,MAAM,GAAG;AACL,WAAQ;AAAK,MAAA,GAAG,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AACH;;AA9C4B;;AAgDjC,eAAe9B,QAAf","sourcesContent":["import React, { Component } from 'react'\nimport * as d3 from 'd3';\n\n\n\n\nclass BarChart extends Component {\n    state = {\n        data: []\n    }\n    \n    componentDidMount() {\n        let url = 'https://cors-anywhere.herokuapp.com/http://api.foodforthoughtt.me/food';\n\n        var result = [];\n        fetch(url)\n        .then(response => response.json())\n        .then(data => {\n            var dict;\n            for (dict in data) {\n                console.log(dict);\n                result.push(dict['calories']);\n            }\n            this.setState({result: data});\n        })\n\n\n        this.drawBarChart(result)\n    }\n\n\n    drawBarChart(data)  {\n        const canvasHeight = 400\n        const canvasWidth = 600\n        const scale = 20\n        const svgCanvas = d3.select(this.refs.canvas)\n            .append(\"svg\")\n            .attr(\"width\", canvasWidth)\n            .attr(\"height\", canvasHeight)\n            .style(\"border\", \"1px solid black\")\n        svgCanvas.selectAll(\"rect\")\n            .data(data).enter()\n                .append(\"rect\")\n                .attr(\"width\", 40)\n                .attr(\"height\", (datapoint) => datapoint * scale)\n                .attr(\"fill\", \"orange\")\n                .attr(\"x\", (datapoint, iteration) => iteration * 45)\n                .attr(\"y\", (datapoint) => canvasHeight - datapoint * scale)\n    \n    }\n    render() { \n        return (<div ref=\"canvas\"></div>);\n    }\n}\nexport default BarChart"]},"metadata":{},"sourceType":"module"}