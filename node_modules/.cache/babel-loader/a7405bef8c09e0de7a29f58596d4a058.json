{"ast":null,"code":"var _jsxFileName = \"/Users/murray/Developer/coursework/software_engineering_cs373/foodforthoughts/src/pages/disease.js\";\nimport React from 'react';\nimport Select from 'react-select';\nimport backImage from '../photos/disease_background.jpg';\nimport { DiseaseCardGrid } from \"../components/infocard.js\";\nimport { PageNav } from '../components/pageNav.js';\nimport '../App.css';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nclass disease extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.sort = () => {\n      let attribute;\n\n      if (this.state.dropdownLabel === 'Attributes') {\n        attribute = 'name';\n      } else {\n        attribute = this.state.filterKey;\n      }\n\n      let url = 'https://cors-anywhere.herokuapp.com/http://api.foodforthoughtt.me/disease?order_by=' + attribute;\n      fetch(url).then(response => response.json()).then(data => {\n        console.log(data);\n        this.setState({\n          elements: data,\n          resetElements: data\n        });\n      });\n    };\n\n    this.incrementPage = () => {\n      const page = this.state.page + 1;\n      this.setState({\n        page\n      });\n    };\n\n    this.decrementPage = () => {\n      const page = this.state.page - 1;\n      this.setState({\n        page\n      });\n    };\n\n    this.goFirstPage = () => {\n      const page = 0;\n      this.setState({\n        page\n      });\n    };\n\n    this.goLastPage = () => {\n      const page = Math.ceil(this.state.elements.length / 9) - 1;\n      this.setState({\n        page\n      });\n    };\n\n    this.styles = {\n      image: {\n        width: 200,\n        height: 150\n      },\n      background: {\n        backgroundImage: \"url(\".concat(backImage),\n        height: '210vh',\n        // 220 vh\n        width: '100vw',\n        overflow: 'auto',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n        backgroundSize: 'cover',\n        backgroundAttachment: 'fixed'\n      },\n      header: {\n        textAlign: 'center',\n        color: 'aliceblue',\n        fontSize: 150\n      }\n    };\n\n    this.toggle = () => {\n      this.setState(prevState => ({\n        dropdownOpen: !prevState.dropdownOpen\n      }));\n    };\n\n    this.toggleMid = () => {\n      this.setState(prevState => ({\n        midDropdownOpen: !prevState.midDropdownOpen\n      }));\n    };\n\n    this.changeFilterTag = label => {\n      this.setState({\n        dropdownLabel: label.currentTarget.getAttribute(\"id\"),\n        filterKey: label.currentTarget.getAttribute(\"fkey\")\n      });\n    };\n\n    this.handleChange = ({\n      target\n    }) => {\n      this.setState({\n        [target.name]: target.value\n      });\n    };\n\n    this.handleReset = () => {\n      this.setState({\n        elements: this.state.resetElements,\n        causeFilter: [],\n        symptomFilter: [],\n        selectedOptionsCause: [],\n        selectedOptionsSymptom: []\n      });\n    };\n\n    this.applyFilter = () => {\n      if (this.state.dropdownLabel != 'Causes' && this.state.dropdownLabel != 'Symptoms') {\n        var elements = this.state.elements.filter(dict => {\n          return dict[this.state.filterKey] >= this.state.min && dict[this.state.filterKey] <= this.state.max;\n        });\n        this.setState({\n          elements\n        });\n      } else {\n        var elements = this.state.elements.filter(dict => {\n          var pass = true;\n          let i;\n\n          for (i = 0; i < this.state.causeFilter.length; i++) if (!dict['cause'].includes(this.state.causeFilter[i])) pass = false;\n\n          for (i = 0; i < this.state.symptomFilter.length; i++) if (!dict['symptom'].includes(this.state.symptomFilter[i])) pass = false;\n\n          return pass;\n        });\n        this.setState({\n          elements\n        });\n      }\n    };\n\n    this.handleSelectCause = selectedOptionsCause => {\n      this.setState({\n        selectedOptionsCause\n      });\n      if (this.state.dropdownLabel === 'Causes' && selectedOptionsCause != null) this.setState({\n        causeFilter: selectedOptionsCause.map(o => o.value)\n      });\n    };\n\n    this.handleSelectSymptom = selectedOptionsSymptom => {\n      this.setState({\n        selectedOptionsSymptom\n      });\n      if (this.state.dropdownLabel === 'Symptoms' && selectedOptionsSymptom != null) this.setState({\n        symptomFilter: selectedOptionsSymptom.map(o => o.value)\n      });\n    };\n\n    this.render = () => {\n      var filterComp;\n      var dropdownSet = new Set();\n      var dropdownList = [];\n\n      if (this.state.dropdownLabel === 'Causes') {\n        let i;\n\n        for (i = 0; i < this.state.elements.length; i++) {\n          var dict = this.state.elements[i];\n          var attributes = dict[this.state.filterKey].split(',');\n          let j;\n\n          for (j = 0; j < attributes.length; j++) dropdownSet.add(attributes[j]);\n        }\n\n        dropdownList = Array.from(dropdownSet);\n        var dictList = [];\n\n        for (i = 0; i < dropdownList.length; i++) {\n          dictList.push({\n            value: dropdownList[i],\n            label: dropdownList[i].charAt(0).toUpperCase() + dropdownList[i].slice(1)\n          });\n        }\n\n        filterComp = React.createElement(\"div\", {\n          style: {\n            width: '700px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }, React.createElement(Select, {\n          className: \"ml-2\",\n          isMulti: true,\n          closeMenuOnSelect: false,\n          value: this.state.selectedOptionsCause,\n          onChange: this.handleSelectCause,\n          options: dictList,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }));\n      } else if (this.state.dropdownLabel === 'Symptoms') {\n        let i;\n\n        for (i = 0; i < this.state.elements.length; i++) {\n          var dict = this.state.elements[i];\n          var attributes = dict[this.state.filterKey].split(',');\n          let j;\n\n          for (j = 0; j < attributes.length; j++) dropdownSet.add(attributes[j]);\n        }\n\n        dropdownList = Array.from(dropdownSet);\n        var dictList = [];\n\n        for (i = 0; i < dropdownList.length; i++) {\n          dictList.push({\n            value: dropdownList[i],\n            label: dropdownList[i].charAt(0).toUpperCase() + dropdownList[i].slice(1)\n          });\n        }\n\n        filterComp = React.createElement(\"div\", {\n          style: {\n            width: '700px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, React.createElement(Select, {\n          className: \"ml-2\",\n          isMulti: true,\n          closeMenuOnSelect: false,\n          value: this.state.selectedOptionsSymptom,\n          onChange: this.handleSelectSymptom,\n          options: dictList,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        }));\n      } else filterComp = React.createElement(\"form\", {\n        class: \"form-inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        class: \"sr-only\",\n        for: \"inlineFormInputName2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"input\", {\n        type: \"number\",\n        min: \"0\",\n        name: \"min\",\n        value: this.state.min,\n        onChange: this.handleChange,\n        class: \"form-control mb-2 ml-4 mr-sm-2\",\n        id: \"inlineFormInputName2\",\n        placeholder: \"Min\",\n        style: {\n          width: '60px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        class: \"sr-only\",\n        for: \"inlineFormInputName2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"input\", {\n        type: \"number\",\n        min: \"0\",\n        name: \"max\",\n        value: this.state.max,\n        onChange: this.handleChange,\n        class: \"form-control mb-2 ml-1 mr-sm-2\",\n        id: \"inlineFormInputName2\",\n        placeholder: \"Max\",\n        style: {\n          width: '60px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }));\n\n      return React.createElement(\"div\", {\n        className: \"img-fluid\",\n        style: this.styles.background,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        class: \"display-1 mb-4\",\n        style: this.styles.header,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"Disease\", React.createElement(\"small\", {\n        style: {\n          color: 'orange'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \" (\", this.state.elements.length, \")\")), React.createElement(\"div\", {\n        class: \"justify-content-md-center row mb-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        isOpen: this.state.dropdownOpen,\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(DropdownToggle, {\n        color: \"warning\",\n        caret: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, this.state.dropdownLabel), React.createElement(DropdownMenu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(DropdownItem, {\n        onClick: this.changeFilterTag,\n        id: \"Average age affected\",\n        fkey: \"age\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, \"Average age affected\"), React.createElement(DropdownItem, {\n        onClick: this.changeFilterTag,\n        id: \"Causes\",\n        fkey: \"cause\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \"Causes\"), React.createElement(DropdownItem, {\n        onClick: this.changeFilterTag,\n        id: \"Deaths per year\",\n        fkey: \"deaths\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, \"Deaths per year\"), React.createElement(DropdownItem, {\n        onClick: this.changeFilterTag,\n        id: \"Symptoms\",\n        fkey: \"symptom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"Symptoms\"), React.createElement(DropdownItem, {\n        onClick: this.changeFilterTag,\n        id: \"Diagnosed per year\",\n        fkey: \"frequency\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \"Diagnosed per year\"))), filterComp, React.createElement(\"button\", {\n        class: \"btn btn-warning ml-4\",\n        onClick: this.applyFilter,\n        style: {\n          height: '37px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"Filter\"), React.createElement(\"button\", {\n        class: \"btn btn-warning ml-4\",\n        onClick: this.sort,\n        style: {\n          height: '37px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \"Sort\"), React.createElement(\"button\", {\n        class: \"btn btn-primary ml-3\",\n        onClick: this.handleReset,\n        style: {\n          height: '37px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"Reset\")), React.createElement(DiseaseCardGrid, {\n        link: this.state.link,\n        elements: this.state.elements,\n        currentPage: this.state.page,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }), React.createElement(PageNav, {\n        label: \"Disease Page Navigator\",\n        page: this.state.page,\n        decrementPage: this.decrementPage,\n        incrementPage: this.incrementPage,\n        lastPage: this.state.elements.length / 9,\n        goFirstPage: this.goFirstPage,\n        goLastPage: this.goLastPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        class: \"let\",\n        style: {\n          fontSize: 30,\n          color: 'aliceblue',\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, \"of \", Math.ceil(this.state.elements.length / 9)));\n    };\n\n    this.state = {\n      elements: [],\n      resetElements: [],\n      page: 0,\n      link: '/DiseasePage',\n      dropdownOpen: false,\n      midDropdownOpen: false,\n      dropdownLabel: 'Attributes',\n      causeFilter: [],\n      symptomFilter: [],\n      filterKey: 'init',\n      min: '0',\n      max: '0',\n      selectedOptionsSymptom: [],\n      selectedOptionsCause: []\n    };\n  }\n\n  componentDidMount() {\n    let url = 'https://cors-anywhere.herokuapp.com/http://api.foodforthoughtt.me/disease';\n    fetch(url).then(response => response.json()).then(data => {\n      console.log(data);\n      this.setState({\n        elements: data,\n        resetElements: data\n      });\n    });\n  }\n\n}\n\nexport default disease;","map":{"version":3,"sources":["/Users/murray/Developer/coursework/software_engineering_cs373/foodforthoughts/src/pages/disease.js"],"names":["React","Select","backImage","DiseaseCardGrid","PageNav","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","disease","Component","constructor","props","sort","attribute","state","dropdownLabel","filterKey","url","fetch","then","response","json","data","console","log","setState","elements","resetElements","incrementPage","page","decrementPage","goFirstPage","goLastPage","Math","ceil","length","styles","image","width","height","background","backgroundImage","overflow","backgroundRepeat","backgroundPosition","backgroundSize","backgroundAttachment","header","textAlign","color","fontSize","toggle","prevState","dropdownOpen","toggleMid","midDropdownOpen","changeFilterTag","label","currentTarget","getAttribute","handleChange","target","name","value","handleReset","causeFilter","symptomFilter","selectedOptionsCause","selectedOptionsSymptom","applyFilter","filter","dict","min","max","pass","i","includes","handleSelectCause","map","o","handleSelectSymptom","render","filterComp","dropdownSet","Set","dropdownList","attributes","split","j","add","Array","from","dictList","push","charAt","toUpperCase","slice","link","componentDidMount"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,SAAQC,eAAR,QAA8B,2BAA9B;AACA,SAAQC,OAAR,QAAsB,0BAAtB;AACA,OAAO,YAAP;AACA,SAASC,QAAT,EAAmBC,cAAnB,EAAmCC,YAAnC,EAAiDC,YAAjD,QAAqE,YAArE;;AAEA,MAAMC,OAAN,SAAsBT,KAAK,CAACU,SAA5B,CAAsC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA+BnBC,IA/BmB,GA+BZ,MAAM;AACX,UAAIC,SAAJ;;AACA,UAAI,KAAKC,KAAL,CAAWC,aAAX,KAA6B,YAAjC,EAA+C;AAC7CF,QAAAA,SAAS,GAAG,MAAZ;AACD,OAFD,MAGK;AACHA,QAAAA,SAAS,GAAG,KAAKC,KAAL,CAAWE,SAAvB;AACD;;AACD,UAAIC,GAAG,GAAG,wFAAwFJ,SAAlG;AACAK,MAAAA,KAAK,CAACD,GAAD,CAAL,CACCE,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,aAAKG,QAAL,CAAc;AAACC,UAAAA,QAAQ,EAAEJ,IAAX;AAAiBK,UAAAA,aAAa,EAAEL;AAAhC,SAAd;AACD,OALD;AAMD,KA9CkB;;AAAA,SAgDnBM,aAhDmB,GAgDH,MAAM;AACpB,YAAMC,IAAI,GAAG,KAAKf,KAAL,CAAWe,IAAX,GAAkB,CAA/B;AACA,WAAKJ,QAAL,CAAc;AAACI,QAAAA;AAAD,OAAd;AACD,KAnDkB;;AAAA,SAqDnBC,aArDmB,GAqDH,MAAM;AACpB,YAAMD,IAAI,GAAG,KAAKf,KAAL,CAAWe,IAAX,GAAkB,CAA/B;AACA,WAAKJ,QAAL,CAAc;AAACI,QAAAA;AAAD,OAAd;AACD,KAxDkB;;AAAA,SA0DnBE,WA1DmB,GA0DL,MAAM;AAClB,YAAMF,IAAI,GAAG,CAAb;AACA,WAAKJ,QAAL,CAAc;AAACI,QAAAA;AAAD,OAAd;AACD,KA7DkB;;AAAA,SA+DnBG,UA/DmB,GA+DN,MAAM;AACjB,YAAMH,IAAI,GAAGI,IAAI,CAACC,IAAL,CAAU,KAAKpB,KAAL,CAAWY,QAAX,CAAoBS,MAApB,GAA2B,CAArC,IAA0C,CAAvD;AACA,WAAKV,QAAL,CAAc;AAACI,QAAAA;AAAD,OAAd;AACD,KAlEkB;;AAAA,SAoEnBO,MApEmB,GAoEV;AACPC,MAAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE,GADF;AAELC,QAAAA,MAAM,EAAE;AAFH,OADA;AAMPC,MAAAA,UAAU,EAAC;AACTC,QAAAA,eAAe,gBAASxC,SAAT,CADN;AAETsC,QAAAA,MAAM,EAAE,OAFC;AAEQ;AACjBD,QAAAA,KAAK,EAAE,OAHE;AAITI,QAAAA,QAAQ,EAAE,MAJD;AAKTC,QAAAA,gBAAgB,EAAE,WALT;AAMTC,QAAAA,kBAAkB,EAAE,QANX;AAOTC,QAAAA,cAAc,EAAE,OAPP;AAQTC,QAAAA,oBAAoB,EAAE;AARb,OANJ;AAiBPC,MAAAA,MAAM,EAAE;AACNC,QAAAA,SAAS,EAAE,QADL;AAENC,QAAAA,KAAK,EAAE,WAFD;AAGNC,QAAAA,QAAQ,EAAE;AAHJ;AAjBD,KApEU;;AAAA,SA4FnBC,MA5FmB,GA4FV,MAAM;AACb,WAAK1B,QAAL,CAAc2B,SAAS,KAAK;AAC1BC,QAAAA,YAAY,EAAE,CAACD,SAAS,CAACC;AADC,OAAL,CAAvB;AAGD,KAhGkB;;AAAA,SAkGnBC,SAlGmB,GAkGP,MAAM;AAChB,WAAK7B,QAAL,CAAc2B,SAAS,KAAK;AAC1BG,QAAAA,eAAe,EAAE,CAACH,SAAS,CAACG;AADF,OAAL,CAAvB;AAGD,KAtGkB;;AAAA,SAwGnBC,eAxGmB,GAwGAC,KAAD,IAAW;AAC3B,WAAKhC,QAAL,CAAc;AAACV,QAAAA,aAAa,EAAE0C,KAAK,CAACC,aAAN,CAAoBC,YAApB,CAAiC,IAAjC,CAAhB;AAAwD3C,QAAAA,SAAS,EAAEyC,KAAK,CAACC,aAAN,CAAoBC,YAApB,CAAiC,MAAjC;AAAnE,OAAd;AACD,KA1GkB;;AAAA,SA4GnBC,YA5GmB,GA4GJ,CAAC;AAACC,MAAAA;AAAD,KAAD,KAAc;AAC3B,WAAKpC,QAAL,CAAc;AAAC,SAACoC,MAAM,CAACC,IAAR,GAAeD,MAAM,CAACE;AAAvB,OAAd;AACD,KA9GkB;;AAAA,SAgHnBC,WAhHmB,GAgHL,MAAM;AAClB,WAAKvC,QAAL,CAAc;AAACC,QAAAA,QAAQ,EAAE,KAAKZ,KAAL,CAAWa,aAAtB;AAAqCsC,QAAAA,WAAW,EAAE,EAAlD;AAAsDC,QAAAA,aAAa,EAAE,EAArE;AAAyEC,QAAAA,oBAAoB,EAAE,EAA/F;AAAmGC,QAAAA,sBAAsB,EAAE;AAA3H,OAAd;AACD,KAlHkB;;AAAA,SAoHnBC,WApHmB,GAoHL,MAAM;AAClB,UAAG,KAAKvD,KAAL,CAAWC,aAAX,IAA4B,QAA5B,IAAwC,KAAKD,KAAL,CAAWC,aAAX,IAA4B,UAAvE,EAAmF;AACjF,YAAIW,QAAQ,GAAG,KAAKZ,KAAL,CAAWY,QAAX,CAAoB4C,MAApB,CAA2BC,IAAI,IAAI;AAC9C,iBAAQA,IAAI,CAAC,KAAKzD,KAAL,CAAWE,SAAZ,CAAJ,IAA8B,KAAKF,KAAL,CAAW0D,GAAzC,IAAgDD,IAAI,CAAC,KAAKzD,KAAL,CAAWE,SAAZ,CAAJ,IAA8B,KAAKF,KAAL,CAAW2D,GAAjG;AACD,SAFY,CAAf;AAGA,aAAKhD,QAAL,CAAc;AAACC,UAAAA;AAAD,SAAd;AACD,OALD,MAMK;AACH,YAAIA,QAAQ,GAAG,KAAKZ,KAAL,CAAWY,QAAX,CAAoB4C,MAApB,CAA2BC,IAAI,IAAI;AAC9C,cAAIG,IAAI,GAAG,IAAX;AACA,cAAIC,CAAJ;;AACA,eAAIA,CAAC,GAAC,CAAN,EAASA,CAAC,GAAC,KAAK7D,KAAL,CAAWmD,WAAX,CAAuB9B,MAAlC,EAA0CwC,CAAC,EAA3C,EACE,IAAG,CAACJ,IAAI,CAAC,OAAD,CAAJ,CAAcK,QAAd,CAAuB,KAAK9D,KAAL,CAAWmD,WAAX,CAAuBU,CAAvB,CAAvB,CAAJ,EACED,IAAI,GAAG,KAAP;;AACJ,eAAIC,CAAC,GAAC,CAAN,EAASA,CAAC,GAAC,KAAK7D,KAAL,CAAWoD,aAAX,CAAyB/B,MAApC,EAA4CwC,CAAC,EAA7C,EACE,IAAG,CAACJ,IAAI,CAAC,SAAD,CAAJ,CAAgBK,QAAhB,CAAyB,KAAK9D,KAAL,CAAWoD,aAAX,CAAyBS,CAAzB,CAAzB,CAAJ,EACED,IAAI,GAAG,KAAP;;AACJ,iBAAOA,IAAP;AACH,SAVc,CAAf;AAWA,aAAKjD,QAAL,CAAc;AAACC,UAAAA;AAAD,SAAd;AACD;AACF,KAzIkB;;AAAA,SA2InBmD,iBA3ImB,GA2IEV,oBAAD,IAA0B;AAC5C,WAAK1C,QAAL,CAAc;AAAC0C,QAAAA;AAAD,OAAd;AACA,UAAG,KAAKrD,KAAL,CAAWC,aAAX,KAA6B,QAA7B,IAAyCoD,oBAAoB,IAAI,IAApE,EACE,KAAK1C,QAAL,CAAc;AAACwC,QAAAA,WAAW,EAAEE,oBAAoB,CAACW,GAArB,CAAyBC,CAAC,IAAIA,CAAC,CAAChB,KAAhC;AAAd,OAAd;AACH,KA/IkB;;AAAA,SAiJnBiB,mBAjJmB,GAiJIZ,sBAAD,IAA4B;AAChD,WAAK3C,QAAL,CAAc;AAAC2C,QAAAA;AAAD,OAAd;AACA,UAAG,KAAKtD,KAAL,CAAWC,aAAX,KAA6B,UAA7B,IAA2CqD,sBAAsB,IAAG,IAAvE,EACE,KAAK3C,QAAL,CAAc;AAACyC,QAAAA,aAAa,EAAEE,sBAAsB,CAACU,GAAvB,CAA2BC,CAAC,IAAIA,CAAC,CAAChB,KAAlC;AAAhB,OAAd;AACH,KArJkB;;AAAA,SAuJnBkB,MAvJmB,GAuJV,MAAM;AACb,UAAIC,UAAJ;AACA,UAAIC,WAAW,GAAG,IAAIC,GAAJ,EAAlB;AACA,UAAIC,YAAY,GAAG,EAAnB;;AACA,UAAG,KAAKvE,KAAL,CAAWC,aAAX,KAA6B,QAAhC,EAA0C;AACxC,YAAI4D,CAAJ;;AACA,aAAKA,CAAC,GAAC,CAAP,EAAUA,CAAC,GAAC,KAAK7D,KAAL,CAAWY,QAAX,CAAoBS,MAAhC,EAAwCwC,CAAC,EAAzC,EAA6C;AAC3C,cAAIJ,IAAI,GAAG,KAAKzD,KAAL,CAAWY,QAAX,CAAoBiD,CAApB,CAAX;AACA,cAAIW,UAAU,GAAGf,IAAI,CAAC,KAAKzD,KAAL,CAAWE,SAAZ,CAAJ,CAA2BuE,KAA3B,CAAiC,GAAjC,CAAjB;AACA,cAAIC,CAAJ;;AACA,eAAIA,CAAC,GAAC,CAAN,EAASA,CAAC,GAACF,UAAU,CAACnD,MAAtB,EAA8BqD,CAAC,EAA/B,EACEL,WAAW,CAACM,GAAZ,CAAgBH,UAAU,CAACE,CAAD,CAA1B;AACH;;AACDH,QAAAA,YAAY,GAAGK,KAAK,CAACC,IAAN,CAAWR,WAAX,CAAf;AACA,YAAIS,QAAQ,GAAG,EAAf;;AACA,aAAIjB,CAAC,GAAC,CAAN,EAASA,CAAC,GAACU,YAAY,CAAClD,MAAxB,EAAgCwC,CAAC,EAAjC,EAAoC;AAClCiB,UAAAA,QAAQ,CAACC,IAAT,CAAc;AAAC9B,YAAAA,KAAK,EAAEsB,YAAY,CAACV,CAAD,CAApB;AAAyBlB,YAAAA,KAAK,EAAE4B,YAAY,CAACV,CAAD,CAAZ,CAAgBmB,MAAhB,CAAuB,CAAvB,EAA0BC,WAA1B,KAA0CV,YAAY,CAACV,CAAD,CAAZ,CAAgBqB,KAAhB,CAAsB,CAAtB;AAA1E,WAAd;AACD;;AACDd,QAAAA,UAAU,GAAG;AAAK,UAAA,KAAK,EAAE;AAAC5C,YAAAA,KAAK,EAAE;AAAR,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACb,oBAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,MAAlB;AAAyB,UAAA,OAAO,MAAhC;AAAiC,UAAA,iBAAiB,EAAE,KAApD;AAA2D,UAAA,KAAK,EAAE,KAAKxB,KAAL,CAAWqD,oBAA7E;AAAmG,UAAA,QAAQ,EAAE,KAAKU,iBAAlH;AAAqI,UAAA,OAAO,EAAEe,QAA9I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADa,CAAb;AAGD,OAjBD,MAkBK,IAAG,KAAK9E,KAAL,CAAWC,aAAX,KAA6B,UAAhC,EAA4C;AAC/C,YAAI4D,CAAJ;;AACA,aAAKA,CAAC,GAAC,CAAP,EAAUA,CAAC,GAAC,KAAK7D,KAAL,CAAWY,QAAX,CAAoBS,MAAhC,EAAwCwC,CAAC,EAAzC,EAA6C;AAC3C,cAAIJ,IAAI,GAAG,KAAKzD,KAAL,CAAWY,QAAX,CAAoBiD,CAApB,CAAX;AACA,cAAIW,UAAU,GAAGf,IAAI,CAAC,KAAKzD,KAAL,CAAWE,SAAZ,CAAJ,CAA2BuE,KAA3B,CAAiC,GAAjC,CAAjB;AACA,cAAIC,CAAJ;;AACA,eAAIA,CAAC,GAAC,CAAN,EAASA,CAAC,GAACF,UAAU,CAACnD,MAAtB,EAA8BqD,CAAC,EAA/B,EACEL,WAAW,CAACM,GAAZ,CAAgBH,UAAU,CAACE,CAAD,CAA1B;AACH;;AACDH,QAAAA,YAAY,GAAGK,KAAK,CAACC,IAAN,CAAWR,WAAX,CAAf;AACA,YAAIS,QAAQ,GAAG,EAAf;;AACA,aAAIjB,CAAC,GAAC,CAAN,EAASA,CAAC,GAACU,YAAY,CAAClD,MAAxB,EAAgCwC,CAAC,EAAjC,EAAoC;AAClCiB,UAAAA,QAAQ,CAACC,IAAT,CAAc;AAAC9B,YAAAA,KAAK,EAAEsB,YAAY,CAACV,CAAD,CAApB;AAAyBlB,YAAAA,KAAK,EAAE4B,YAAY,CAACV,CAAD,CAAZ,CAAgBmB,MAAhB,CAAuB,CAAvB,EAA0BC,WAA1B,KAA0CV,YAAY,CAACV,CAAD,CAAZ,CAAgBqB,KAAhB,CAAsB,CAAtB;AAA1E,WAAd;AACD;;AACDd,QAAAA,UAAU,GAAG;AAAK,UAAA,KAAK,EAAE;AAAC5C,YAAAA,KAAK,EAAE;AAAR,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACb,oBAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,MAAlB;AAAyB,UAAA,OAAO,MAAhC;AAAiC,UAAA,iBAAiB,EAAE,KAApD;AAA2D,UAAA,KAAK,EAAE,KAAKxB,KAAL,CAAWsD,sBAA7E;AAAqG,UAAA,QAAQ,EAAE,KAAKY,mBAApH;AAAyI,UAAA,OAAO,EAAEY,QAAlJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADa,CAAb;AAGD,OAjBI,MAmBHV,UAAU,GAAG;AAAM,QAAA,KAAK,EAAC,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACb;AAAO,QAAA,KAAK,EAAC,SAAb;AAAuB,QAAA,GAAG,EAAC,sBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADa,EAEb;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,GAAG,EAAC,GAAzB;AAA6B,QAAA,IAAI,EAAC,KAAlC;AAAwC,QAAA,KAAK,EAAE,KAAKpE,KAAL,CAAW0D,GAA1D;AAA+D,QAAA,QAAQ,EAAE,KAAKZ,YAA9E;AAA4F,QAAA,KAAK,EAAC,gCAAlG;AAAmI,QAAA,EAAE,EAAC,sBAAtI;AAA6J,QAAA,WAAW,EAAC,KAAzK;AAA+K,QAAA,KAAK,EAAE;AAACtB,UAAAA,KAAK,EAAE;AAAR,SAAtL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFa,EAGb;AAAO,QAAA,KAAK,EAAC,SAAb;AAAuB,QAAA,GAAG,EAAC,sBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHa,EAIb;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,GAAG,EAAC,GAAzB;AAA6B,QAAA,IAAI,EAAC,KAAlC;AAAwC,QAAA,KAAK,EAAE,KAAKxB,KAAL,CAAW2D,GAA1D;AAA+D,QAAA,QAAQ,EAAE,KAAKb,YAA9E;AAA4F,QAAA,KAAK,EAAC,gCAAlG;AAAmI,QAAA,EAAE,EAAC,sBAAtI;AAA6J,QAAA,WAAW,EAAC,KAAzK;AAA+K,QAAA,KAAK,EAAE;AAACtB,UAAAA,KAAK,EAAE;AAAR,SAAtL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJa,CAAb;;AAOF,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,KAAK,EAAE,KAAKF,MAAL,CAAYI,UAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,KAAK,EAAC,gBAAV;AAA2B,QAAA,KAAK,EAAE,KAAKJ,MAAL,CAAYW,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAO,QAAA,KAAK,EAAE;AAACE,UAAAA,KAAK,EAAC;AAAP,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAmC,KAAKnC,KAAL,CAAWY,QAAX,CAAoBS,MAAvD,MADA,CADF,EAIE;AAAK,QAAA,KAAK,EAAC,oCAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAE,KAAKrB,KAAL,CAAWuC,YAA7B;AAA2C,QAAA,MAAM,EAAE,KAAKF,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AAAgB,QAAA,KAAK,EAAC,SAAtB;AAAgC,QAAA,KAAK,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKrC,KAAL,CAAWC,aADd,CADF,EAIE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAc,QAAA,OAAO,EAAE,KAAKyC,eAA5B;AAA6C,QAAA,EAAE,EAAC,sBAAhD;AAAuE,QAAA,IAAI,EAAC,KAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAEE,oBAAC,YAAD;AAAc,QAAA,OAAO,EAAE,KAAKA,eAA5B;AAA6C,QAAA,EAAE,EAAC,QAAhD;AAAyD,QAAA,IAAI,EAAC,OAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGE,oBAAC,YAAD;AAAc,QAAA,OAAO,EAAE,KAAKA,eAA5B;AAA6C,QAAA,EAAE,EAAC,iBAAhD;AAAkE,QAAA,IAAI,EAAC,QAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAHF,EAIE,oBAAC,YAAD;AAAc,QAAA,OAAO,EAAE,KAAKA,eAA5B;AAA6C,QAAA,EAAE,EAAC,UAAhD;AAA2D,QAAA,IAAI,EAAC,SAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,EAKE,oBAAC,YAAD;AAAc,QAAA,OAAO,EAAE,KAAKA,eAA5B;AAA6C,QAAA,EAAE,EAAC,oBAAhD;AAAqE,QAAA,IAAI,EAAC,WAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BALF,CAJF,CADF,EAaG0B,UAbH,EAcE;AAAQ,QAAA,KAAK,EAAC,sBAAd;AAAqC,QAAA,OAAO,EAAE,KAAKb,WAAnD;AAAgE,QAAA,KAAK,EAAE;AAAC9B,UAAAA,MAAM,EAAE;AAAT,SAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF,EAeE;AAAQ,QAAA,KAAK,EAAC,sBAAd;AAAqC,QAAA,OAAO,EAAE,KAAK3B,IAAnD;AAAyD,QAAA,KAAK,EAAE;AAAC2B,UAAAA,MAAM,EAAE;AAAT,SAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF,EAgBE;AAAQ,QAAA,KAAK,EAAC,sBAAd;AAAqC,QAAA,OAAO,EAAE,KAAKyB,WAAnD;AAAgE,QAAA,KAAK,EAAE;AAACzB,UAAAA,MAAM,EAAE;AAAT,SAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAhBF,CAJF,EAsBE,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAE,KAAKzB,KAAL,CAAWmF,IAAlC;AAAwC,QAAA,QAAQ,EAAE,KAAKnF,KAAL,CAAWY,QAA7D;AAAuE,QAAA,WAAW,EAAE,KAAKZ,KAAL,CAAWe,IAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAtBF,EAuBE,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAC,wBAAf;AAAwC,QAAA,IAAI,EAAE,KAAKf,KAAL,CAAWe,IAAzD;AAA+D,QAAA,aAAa,EAAI,KAAKC,aAArF;AACC,QAAA,aAAa,EAAI,KAAKF,aADvB;AACsC,QAAA,QAAQ,EAAE,KAAKd,KAAL,CAAWY,QAAX,CAAoBS,MAApB,GAA2B,CAD3E;AAC8E,QAAA,WAAW,EAAI,KAAKJ,WADlG;AAC+G,QAAA,UAAU,EAAI,KAAKC,UADlI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAvBF,EAyBE;AAAG,QAAA,KAAK,EAAC,KAAT;AAAe,QAAA,KAAK,EAAE;AAACkB,UAAAA,QAAQ,EAAE,EAAX;AAAeD,UAAAA,KAAK,EAAE,WAAtB;AAAmCD,UAAAA,SAAS,EAAE;AAA9C,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAmFf,IAAI,CAACC,IAAL,CAAU,KAAKpB,KAAL,CAAWY,QAAX,CAAoBS,MAApB,GAA2B,CAArC,CAAnF,CAzBF,CADF;AA6BD,KApOkB;;AAGjB,SAAKrB,KAAL,GAAa;AACXY,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,aAAa,EAAE,EAFJ;AAGXE,MAAAA,IAAI,EAAE,CAHK;AAIXoE,MAAAA,IAAI,EAAE,cAJK;AAKX5C,MAAAA,YAAY,EAAE,KALH;AAMXE,MAAAA,eAAe,EAAE,KANN;AAOXxC,MAAAA,aAAa,EAAE,YAPJ;AAQXkD,MAAAA,WAAW,EAAE,EARF;AASXC,MAAAA,aAAa,EAAE,EATJ;AAUXlD,MAAAA,SAAS,EAAE,MAVA;AAWXwD,MAAAA,GAAG,EAAE,GAXM;AAYXC,MAAAA,GAAG,EAAE,GAZM;AAaXL,MAAAA,sBAAsB,EAAE,EAbb;AAcXD,MAAAA,oBAAoB,EAAE;AAdX,KAAb;AAgBD;;AAED+B,EAAAA,iBAAiB,GAAG;AAClB,QAAIjF,GAAG,GAAG,2EAAV;AACAC,IAAAA,KAAK,CAACD,GAAD,CAAL,CACCE,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,WAAKG,QAAL,CAAc;AAACC,QAAAA,QAAQ,EAAEJ,IAAX;AAAiBK,QAAAA,aAAa,EAAEL;AAAhC,OAAd;AACD,KALD;AAMD;;AA9BmC;;AAwOtC,eAAed,OAAf","sourcesContent":["import React from 'react';\nimport Select from 'react-select';\nimport backImage from '../photos/disease_background.jpg';\nimport {DiseaseCardGrid} from \"../components/infocard.js\";\nimport {PageNav} from '../components/pageNav.js';\nimport '../App.css';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nclass disease extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      elements: [],\n      resetElements: [],\n      page: 0,\n      link: '/DiseasePage',\n      dropdownOpen: false,\n      midDropdownOpen: false,\n      dropdownLabel: 'Attributes',\n      causeFilter: [],\n      symptomFilter: [],\n      filterKey: 'init',\n      min: '0',\n      max: '0',\n      selectedOptionsSymptom: [],\n      selectedOptionsCause: []\n    }\n  }\n  \n  componentDidMount() {\n    let url = 'https://cors-anywhere.herokuapp.com/http://api.foodforthoughtt.me/disease';\n    fetch(url)\n    .then(response => response.json())\n    .then(data => {\n      console.log(data);\n      this.setState({elements: data, resetElements: data});\n    })\n  }\n\n  sort = () => {\n    let attribute;\n    if (this.state.dropdownLabel === 'Attributes') {\n      attribute = 'name';\n    }\n    else {\n      attribute = this.state.filterKey;\n    }\n    let url = 'https://cors-anywhere.herokuapp.com/http://api.foodforthoughtt.me/disease?order_by=' + attribute;\n    fetch(url)\n    .then(response => response.json())\n    .then(data => {\n      console.log(data);\n      this.setState({elements: data, resetElements: data});\n    })\n  }\n\n  incrementPage = () => {\n    const page = this.state.page + 1;\n    this.setState({page});\n  }\n\n  decrementPage = () => {\n    const page = this.state.page - 1;\n    this.setState({page});\n  }\n\n  goFirstPage = () => {\n    const page = 0;\n    this.setState({page});\n  }\n\n  goLastPage = () => {\n    const page = Math.ceil(this.state.elements.length/9) - 1;\n    this.setState({page});\n  }\n\n  styles = {\n    image: {\n      width: 200,\n      height: 150,\n    },\n\n    background:{\n      backgroundImage: `url(${backImage}`,\n      height: '210vh', // 220 vh\n      width: '100vw',\n      overflow: 'auto',\n      backgroundRepeat: 'no-repeat',\n      backgroundPosition: 'center',\n      backgroundSize: 'cover',\n      backgroundAttachment: 'fixed'\n    },\n\n    header: {\n      textAlign: 'center',\n      color: 'aliceblue',\n      fontSize: 150\n    },\n  };\n\n  toggle = () => {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n\n  toggleMid = () => {\n    this.setState(prevState => ({\n      midDropdownOpen: !prevState.midDropdownOpen\n    }));\n  }\n  \n  changeFilterTag = (label) => {\n    this.setState({dropdownLabel: label.currentTarget.getAttribute(\"id\"), filterKey: label.currentTarget.getAttribute(\"fkey\")})\n  }\n  \n  handleChange = ({target}) => {\n    this.setState({[target.name]: target.value})\n  }\n  \n  handleReset = () => {\n    this.setState({elements: this.state.resetElements, causeFilter: [], symptomFilter: [], selectedOptionsCause: [], selectedOptionsSymptom: []})\n  }\n  \n  applyFilter = () => {\n    if(this.state.dropdownLabel != 'Causes' && this.state.dropdownLabel != 'Symptoms') {\n      var elements = this.state.elements.filter(dict => {\n          return (dict[this.state.filterKey] >= this.state.min && dict[this.state.filterKey] <= this.state.max)   \n        })\n      this.setState({elements})\n    }\n    else {\n      var elements = this.state.elements.filter(dict => {\n          var pass = true;\n          let i;\n          for(i=0; i<this.state.causeFilter.length; i++)\n            if(!dict['cause'].includes(this.state.causeFilter[i]))\n              pass = false;\n          for(i=0; i<this.state.symptomFilter.length; i++)\n            if(!dict['symptom'].includes(this.state.symptomFilter[i]))\n              pass = false;\n          return pass;\n      })\n      this.setState({elements})\n    }\n  }\n\n  handleSelectCause = (selectedOptionsCause) => {\n    this.setState({selectedOptionsCause});\n    if(this.state.dropdownLabel === 'Causes' && selectedOptionsCause != null)\n      this.setState({causeFilter: selectedOptionsCause.map(o => o.value)})\n  }\n\n  handleSelectSymptom = (selectedOptionsSymptom) => {\n    this.setState({selectedOptionsSymptom})\n    if(this.state.dropdownLabel === 'Symptoms' && selectedOptionsSymptom!= null)\n      this.setState({symptomFilter: selectedOptionsSymptom.map(o => o.value)})\n  }\n  \n  render = () => {\n    var filterComp;\n    var dropdownSet = new Set();\n    var dropdownList = [];\n    if(this.state.dropdownLabel === 'Causes') {\n      let i;\n      for (i=0; i<this.state.elements.length; i++) {\n        var dict = this.state.elements[i];\n        var attributes = dict[this.state.filterKey].split(',');\n        let j;\n        for(j=0; j<attributes.length; j++)\n          dropdownSet.add(attributes[j]);\n      }\n      dropdownList = Array.from(dropdownSet);\n      var dictList = [];\n      for(i=0; i<dropdownList.length; i++){\n        dictList.push({value: dropdownList[i], label: dropdownList[i].charAt(0).toUpperCase() + dropdownList[i].slice(1)});\n      }\n      filterComp = <div style={{width: '700px'}}>\n      <Select className=\"ml-2\" isMulti closeMenuOnSelect={false} value={this.state.selectedOptionsCause} onChange={this.handleSelectCause} options={dictList}/>\n      </div>;\n    }\n    else if(this.state.dropdownLabel === 'Symptoms') {\n      let i;\n      for (i=0; i<this.state.elements.length; i++) {\n        var dict = this.state.elements[i];\n        var attributes = dict[this.state.filterKey].split(',');\n        let j;\n        for(j=0; j<attributes.length; j++)\n          dropdownSet.add(attributes[j]);\n      }\n      dropdownList = Array.from(dropdownSet);\n      var dictList = [];\n      for(i=0; i<dropdownList.length; i++){\n        dictList.push({value: dropdownList[i], label: dropdownList[i].charAt(0).toUpperCase() + dropdownList[i].slice(1)});\n      }\n      filterComp = <div style={{width: '700px'}}>\n      <Select className=\"ml-2\" isMulti closeMenuOnSelect={false} value={this.state.selectedOptionsSymptom} onChange={this.handleSelectSymptom} options={dictList}/>\n      </div>;\n    }\n    else \n      filterComp = <form class=\"form-inline\">\n      <label class=\"sr-only\" for=\"inlineFormInputName2\">Name</label>\n      <input type=\"number\" min=\"0\" name=\"min\" value={this.state.min} onChange={this.handleChange} class=\"form-control mb-2 ml-4 mr-sm-2\" id=\"inlineFormInputName2\" placeholder=\"Min\" style={{width: '60px'}}></input>\n      <label class=\"sr-only\" for=\"inlineFormInputName2\">Name</label>\n      <input type=\"number\" min=\"0\" name=\"max\" value={this.state.max} onChange={this.handleChange} class=\"form-control mb-2 ml-1 mr-sm-2\" id=\"inlineFormInputName2\" placeholder=\"Max\" style={{width: '60px'}}></input>\n      </form>;\n    \n    return (\n      <div className=\"img-fluid\" style={this.styles.background}>\n        <h1 class=\"display-1 mb-4\" style={this.styles.header}>Disease\n        <small style={{color:'orange'}}> ({this.state.elements.length})</small></h1>\n\n        <div class=\"justify-content-md-center row mb-5\">\n          <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n            <DropdownToggle color=\"warning\" caret>\n              {this.state.dropdownLabel}\n            </DropdownToggle>\n            <DropdownMenu>\n              <DropdownItem onClick={this.changeFilterTag} id='Average age affected' fkey='age'>Average age affected</DropdownItem>\n              <DropdownItem onClick={this.changeFilterTag} id='Causes' fkey='cause'>Causes</DropdownItem>\n              <DropdownItem onClick={this.changeFilterTag} id='Deaths per year' fkey='deaths'>Deaths per year</DropdownItem>\n              <DropdownItem onClick={this.changeFilterTag} id='Symptoms' fkey='symptom'>Symptoms</DropdownItem>\n              <DropdownItem onClick={this.changeFilterTag} id='Diagnosed per year' fkey='frequency'>Diagnosed per year</DropdownItem>\n            </DropdownMenu>\n          </Dropdown>\n          {filterComp}\n          <button class=\"btn btn-warning ml-4\" onClick={this.applyFilter} style={{height: '37px'}}>Filter</button>\n          <button class=\"btn btn-warning ml-4\" onClick={this.sort} style={{height: '37px'}}>Sort</button>\n          <button class=\"btn btn-primary ml-3\" onClick={this.handleReset} style={{height: '37px'}}>Reset</button>\n        </div>\n        <DiseaseCardGrid link={this.state.link} elements={this.state.elements} currentPage={this.state.page}/>\n        <PageNav label='Disease Page Navigator' page={this.state.page} decrementPage = {this.decrementPage}\n         incrementPage = {this.incrementPage} lastPage={this.state.elements.length/9} goFirstPage = {this.goFirstPage} goLastPage = {this.goLastPage}/>\n        <p class=\"let\" style={{fontSize: 30, color: 'aliceblue', textAlign: 'center'}}>of {Math.ceil(this.state.elements.length/9)}</p>\n      </div> \n    )\n  }\n}\n\nexport default disease"]},"metadata":{},"sourceType":"module"}