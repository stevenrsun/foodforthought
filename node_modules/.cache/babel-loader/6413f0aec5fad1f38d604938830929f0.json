{"ast":null,"code":"var _jsxFileName = \"/Users/murray/Developer/coursework/software_engineering_cs373/foodforthoughts/src/components/BarChart.js\";\nimport React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport d3Tip from \"d3-tip\"; //This code is modified from Simple d3.js bar chart D3: http://bl.ocks.org/d3noob/8952219#bar-data.csv\n//with rainbow function from this codepen: https://codepen.io/chadoh/pen/NRXpKw\n\nclass BarChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      bottomText: \"Loading...\",\n      data: []\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      // call API\n      let url = 'https://cors-anywhere.herokuapp.com/http://api.foodforthoughtt.me/food';\n      const response = await fetch(url);\n\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n\n      const json = await response.json();\n      this.setState({\n        data: json\n      });\n    } catch (error) {\n      console.log(error);\n    }\n\n    var arr = [];\n\n    for (let i = 0; i < 5; i++) {\n      const it = parseInt(this.state.data[i]['calories']);\n      console.log(it);\n      arr.push(it);\n    }\n\n    this.drawBarChart(arr);\n  }\n\n  drawBarChart(data) {\n    const canvasHeight = 400;\n    const canvasWidth = 600;\n    const scale = 5;\n    const svgCanvas = d3.select(this.refs.canvas).append(\"svg\").attr(\"width\", canvasWidth).attr(\"height\", canvasHeight).style(\"border\", \"1px solid black\");\n    svgCanvas.selectAll(\"rect\").data(data).enter().append(\"rect\").attr(\"width\", 40).attr(\"height\", datapoint => datapoint * scale).attr(\"fill\", \"orange\").attr(\"x\", (datapoint, iteration) => iteration * 45).attr(\"y\", datapoint => canvasHeight - datapoint * scale);\n    svgCanvas.selectAll(\"text\").data(data).enter().append(\"text\").attr(\"x\", (dataPoint, i) => i * 45 + 10).attr(\"y\", (dataPoint, i) => canvasHeight - dataPoint * scale - 10).text(dataPoint => dataPoint);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      ref: \"canvas\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default BarChart;","map":{"version":3,"sources":["/Users/murray/Developer/coursework/software_engineering_cs373/foodforthoughts/src/components/BarChart.js"],"names":["React","Component","d3","d3Tip","BarChart","constructor","props","state","isLoaded","bottomText","data","componentDidMount","url","response","fetch","ok","Error","statusText","json","setState","error","console","log","arr","i","it","parseInt","push","drawBarChart","canvasHeight","canvasWidth","scale","svgCanvas","select","refs","canvas","append","attr","style","selectAll","enter","datapoint","iteration","dataPoint","text","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport d3Tip  from \"d3-tip\";\n\n\n\n//This code is modified from Simple d3.js bar chart D3: http://bl.ocks.org/d3noob/8952219#bar-data.csv\n//with rainbow function from this codepen: https://codepen.io/chadoh/pen/NRXpKw\n\nclass BarChart extends Component\n{\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      bottomText: \"Loading...\",\n      data: []\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      // call API\n      let url = 'https://cors-anywhere.herokuapp.com/http://api.foodforthoughtt.me/food';\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n      const json = await response.json();\n      this.setState({ data: json });\n    } catch (error) {\n      console.log(error);\n    }\n\n    var arr = []\n    for (let i=0; i < 5; i++) {\n      const it = parseInt(this.state.data[i]['calories']);\n      console.log(it)\n      arr.push(it)\n    }\n\n    this.drawBarChart(arr);\n  }\n\n  drawBarChart(data)  {\n    const canvasHeight = 400\n    const canvasWidth = 600\n    const scale = 5\n    const svgCanvas = d3.select(this.refs.canvas)\n        .append(\"svg\")\n        .attr(\"width\", canvasWidth)\n        .attr(\"height\", canvasHeight)\n        .style(\"border\", \"1px solid black\")\n    svgCanvas.selectAll(\"rect\")\n        .data(data).enter()\n            .append(\"rect\")\n            .attr(\"width\", 40)\n            .attr(\"height\", (datapoint) => datapoint * scale)\n            .attr(\"fill\", \"orange\")\n            .attr(\"x\", (datapoint, iteration) => iteration * 45)\n            .attr(\"y\", (datapoint) => canvasHeight - datapoint * scale)\n    \n    svgCanvas.selectAll(\"text\")\n      .data(data).enter()\n          .append(\"text\")\n          .attr(\"x\", (dataPoint, i) => i * 45 + 10)\n          .attr(\"y\", (dataPoint, i) => canvasHeight - dataPoint * scale - 10)\n          .text(dataPoint => dataPoint)\n  }\n\n  render() { \n    return <div ref=\"canvas\"></div> \n  }\n}\n\nexport default BarChart;\n"]},"metadata":{},"sourceType":"module"}